{
    "messages": [
        {
            "type": "error",
            "module": "vclibpy.datamodels",
            "obj": "VariableContainer.__getattr__",
            "line": 65,
            "column": 19,
            "path": "vclibpy/datamodels.py",
            "symbol": "no-member",
            "message": "Super of 'VariableContainer' has no '__getattr__' member",
            "message-id": "E1101"
        },
        {
            "type": "refactor",
            "module": "vclibpy.datamodels",
            "obj": "Inputs.__init__",
            "line": 166,
            "column": 4,
            "path": "vclibpy/datamodels.py",
            "symbol": "too-many-arguments",
            "message": "Too many arguments (9/5)",
            "message-id": "R0913"
        },
        {
            "type": "convention",
            "module": "vclibpy.flowsheets.vapor_injection_economizer",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "vclibpy/flowsheets/vapor_injection_economizer.py",
            "symbol": "missing-module-docstring",
            "message": "Missing module docstring",
            "message-id": "C0114"
        },
        {
            "type": "refactor",
            "module": "vclibpy.flowsheets.vapor_injection_economizer",
            "obj": "VaporInjectionEconomizer.calc_injection",
            "line": 46,
            "column": 4,
            "path": "vclibpy/flowsheets/vapor_injection_economizer.py",
            "symbol": "too-many-locals",
            "message": "Too many local variables (20/15)",
            "message-id": "R0914"
        },
        {
            "type": "convention",
            "module": "vclibpy.flowsheets.vapor_injection_economizer",
            "obj": "VaporInjectionEconomizer.calc_injection",
            "line": 85,
            "column": 8,
            "path": "vclibpy/flowsheets/vapor_injection_economizer.py",
            "symbol": "invalid-name",
            "message": "Variable name \"dT_secondary\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.flowsheets.vapor_injection_economizer",
            "obj": "VaporInjectionEconomizer.calc_injection",
            "line": 106,
            "column": 12,
            "path": "vclibpy/flowsheets/vapor_injection_economizer.py",
            "symbol": "invalid-name",
            "message": "Variable name \"Q_flow_goal\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.flowsheets.vapor_injection_economizer",
            "obj": "VaporInjectionEconomizer.calc_injection",
            "line": 114,
            "column": 12,
            "path": "vclibpy/flowsheets/vapor_injection_economizer.py",
            "symbol": "invalid-name",
            "message": "Variable name \"Q_flow\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "warning",
            "module": "vclibpy.flowsheets.vapor_injection_economizer",
            "obj": "VaporInjectionEconomizer.calc_injection",
            "line": 114,
            "column": 20,
            "path": "vclibpy/flowsheets/vapor_injection_economizer.py",
            "symbol": "unused-variable",
            "message": "Unused variable 'k'",
            "message-id": "W0612"
        },
        {
            "type": "convention",
            "module": "vclibpy.flowsheets.vapor_injection_phase_separator",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "vclibpy/flowsheets/vapor_injection_phase_separator.py",
            "symbol": "missing-module-docstring",
            "message": "Missing module docstring",
            "message-id": "C0114"
        },
        {
            "type": "convention",
            "module": "vclibpy.flowsheets",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "vclibpy/flowsheets/__init__.py",
            "symbol": "missing-module-docstring",
            "message": "Missing module docstring",
            "message-id": "C0114"
        },
        {
            "type": "convention",
            "module": "vclibpy.flowsheets.base",
            "obj": "",
            "line": 217,
            "column": 0,
            "path": "vclibpy/flowsheets/base.py",
            "symbol": "line-too-long",
            "message": "Line too long (118/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "vclibpy.flowsheets.base",
            "obj": "",
            "line": 290,
            "column": 0,
            "path": "vclibpy/flowsheets/base.py",
            "symbol": "superfluous-parens",
            "message": "Unnecessary parens after '=' keyword",
            "message-id": "C0325"
        },
        {
            "type": "convention",
            "module": "vclibpy.flowsheets.base",
            "obj": "",
            "line": 324,
            "column": 0,
            "path": "vclibpy/flowsheets/base.py",
            "symbol": "line-too-long",
            "message": "Line too long (112/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "vclibpy.flowsheets.base",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "vclibpy/flowsheets/base.py",
            "symbol": "missing-module-docstring",
            "message": "Missing module docstring",
            "message-id": "C0114"
        },
        {
            "type": "convention",
            "module": "vclibpy.flowsheets.base",
            "obj": "BaseCycle.setup_new_fluid",
            "line": 46,
            "column": 4,
            "path": "vclibpy/flowsheets/base.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "vclibpy.flowsheets.base",
            "obj": "BaseCycle.terminate",
            "line": 66,
            "column": 4,
            "path": "vclibpy/flowsheets/base.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "vclibpy.flowsheets.base",
            "obj": "BaseCycle.get_all_components",
            "line": 71,
            "column": 4,
            "path": "vclibpy/flowsheets/base.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "refactor",
            "module": "vclibpy.flowsheets.base",
            "obj": "BaseCycle.calc_steady_state",
            "line": 74,
            "column": 4,
            "path": "vclibpy/flowsheets/base.py",
            "symbol": "too-many-locals",
            "message": "Too many local variables (45/15)",
            "message-id": "R0914"
        },
        {
            "type": "convention",
            "module": "vclibpy.flowsheets.base",
            "obj": "BaseCycle.calc_steady_state",
            "line": 134,
            "column": 8,
            "path": "vclibpy/flowsheets/base.py",
            "symbol": "invalid-name",
            "message": "Variable name \"err_dT_min\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.flowsheets.base",
            "obj": "BaseCycle.calc_steady_state",
            "line": 152,
            "column": 8,
            "path": "vclibpy/flowsheets/base.py",
            "symbol": "invalid-name",
            "message": "Variable name \"T_1_start\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.flowsheets.base",
            "obj": "BaseCycle.calc_steady_state",
            "line": 153,
            "column": 8,
            "path": "vclibpy/flowsheets/base.py",
            "symbol": "invalid-name",
            "message": "Variable name \"T_3_start\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.flowsheets.base",
            "obj": "BaseCycle.calc_steady_state",
            "line": 220,
            "column": 23,
            "path": "vclibpy/flowsheets/base.py",
            "symbol": "invalid-name",
            "message": "Variable name \"dT_min_eva\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "refactor",
            "module": "vclibpy.flowsheets.base",
            "obj": "BaseCycle.calc_steady_state",
            "line": 223,
            "column": 12,
            "path": "vclibpy/flowsheets/base.py",
            "symbol": "no-else-continue",
            "message": "Unnecessary \"else\" after \"continue\", remove the \"else\" and de-indent the code inside it",
            "message-id": "R1724"
        },
        {
            "type": "refactor",
            "module": "vclibpy.flowsheets.base",
            "obj": "BaseCycle.calc_steady_state",
            "line": 227,
            "column": 16,
            "path": "vclibpy/flowsheets/base.py",
            "symbol": "no-else-continue",
            "message": "Unnecessary \"elif\" after \"continue\", remove the leading \"el\" from \"elif\"",
            "message-id": "R1724"
        },
        {
            "type": "convention",
            "module": "vclibpy.flowsheets.base",
            "obj": "BaseCycle.calc_steady_state",
            "line": 236,
            "column": 23,
            "path": "vclibpy/flowsheets/base.py",
            "symbol": "invalid-name",
            "message": "Variable name \"dT_min_con\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "refactor",
            "module": "vclibpy.flowsheets.base",
            "obj": "BaseCycle.calc_steady_state",
            "line": 237,
            "column": 12,
            "path": "vclibpy/flowsheets/base.py",
            "symbol": "no-else-continue",
            "message": "Unnecessary \"else\" after \"continue\", remove the \"else\" and de-indent the code inside it",
            "message-id": "R1724"
        },
        {
            "type": "refactor",
            "module": "vclibpy.flowsheets.base",
            "obj": "BaseCycle.calc_steady_state",
            "line": 241,
            "column": 16,
            "path": "vclibpy/flowsheets/base.py",
            "symbol": "no-else-continue",
            "message": "Unnecessary \"elif\" after \"continue\", remove the leading \"el\" from \"elif\"",
            "message-id": "R1724"
        },
        {
            "type": "convention",
            "module": "vclibpy.flowsheets.base",
            "obj": "BaseCycle.calc_steady_state",
            "line": 277,
            "column": 8,
            "path": "vclibpy/flowsheets/base.py",
            "symbol": "invalid-name",
            "message": "Variable name \"Q_con\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.flowsheets.base",
            "obj": "BaseCycle.calc_steady_state",
            "line": 278,
            "column": 8,
            "path": "vclibpy/flowsheets/base.py",
            "symbol": "invalid-name",
            "message": "Variable name \"Q_con_outer\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.flowsheets.base",
            "obj": "BaseCycle.calc_steady_state",
            "line": 279,
            "column": 8,
            "path": "vclibpy/flowsheets/base.py",
            "symbol": "invalid-name",
            "message": "Variable name \"Q_eva\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.flowsheets.base",
            "obj": "BaseCycle.calc_steady_state",
            "line": 280,
            "column": 8,
            "path": "vclibpy/flowsheets/base.py",
            "symbol": "invalid-name",
            "message": "Variable name \"Q_eva_outer\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.flowsheets.base",
            "obj": "BaseCycle.calc_steady_state",
            "line": 283,
            "column": 8,
            "path": "vclibpy/flowsheets/base.py",
            "symbol": "invalid-name",
            "message": "Variable name \"P_el\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.flowsheets.base",
            "obj": "BaseCycle.calc_steady_state",
            "line": 284,
            "column": 8,
            "path": "vclibpy/flowsheets/base.py",
            "symbol": "invalid-name",
            "message": "Variable name \"T_con_out\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.flowsheets.base",
            "obj": "BaseCycle.calc_steady_state",
            "line": 287,
            "column": 8,
            "path": "vclibpy/flowsheets/base.py",
            "symbol": "invalid-name",
            "message": "Variable name \"COP_inner\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.flowsheets.base",
            "obj": "BaseCycle.calc_steady_state",
            "line": 288,
            "column": 8,
            "path": "vclibpy/flowsheets/base.py",
            "symbol": "invalid-name",
            "message": "Variable name \"COP_outer\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.flowsheets.base",
            "obj": "BaseCycle.calc_steady_state",
            "line": 290,
            "column": 8,
            "path": "vclibpy/flowsheets/base.py",
            "symbol": "invalid-name",
            "message": "Variable name \"COP_carnot\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "refactor",
            "module": "vclibpy.flowsheets.base",
            "obj": "BaseCycle.calc_steady_state",
            "line": 74,
            "column": 4,
            "path": "vclibpy/flowsheets/base.py",
            "symbol": "too-many-branches",
            "message": "Too many branches (28/12)",
            "message-id": "R0912"
        },
        {
            "type": "refactor",
            "module": "vclibpy.flowsheets.base",
            "obj": "BaseCycle.calc_steady_state",
            "line": 74,
            "column": 4,
            "path": "vclibpy/flowsheets/base.py",
            "symbol": "too-many-statements",
            "message": "Too many statements (132/50)",
            "message-id": "R0915"
        },
        {
            "type": "refactor",
            "module": "vclibpy.flowsheets.base",
            "obj": "BaseCycle.calc_steady_state",
            "line": 74,
            "column": 4,
            "path": "vclibpy/flowsheets/base.py",
            "symbol": "inconsistent-return-statements",
            "message": "Either all return statements in a function should return an expression, or none of them should.",
            "message-id": "R1710"
        },
        {
            "type": "convention",
            "module": "vclibpy.flowsheets.base",
            "obj": "BaseCycle.set_evaporator_outlet_based_on_superheating",
            "line": 350,
            "column": 8,
            "path": "vclibpy/flowsheets/base.py",
            "symbol": "invalid-name",
            "message": "Variable name \"T_1\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.flowsheets.base",
            "obj": "BaseCycle.set_condenser_outlet_based_on_subcooling",
            "line": 365,
            "column": 8,
            "path": "vclibpy/flowsheets/base.py",
            "symbol": "invalid-name",
            "message": "Variable name \"T_3\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.flowsheets.base",
            "obj": "BaseCycle.plot_cycle",
            "line": 377,
            "column": 8,
            "path": "vclibpy/flowsheets/base.py",
            "symbol": "invalid-name",
            "message": "Variable name \"h_T\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.flowsheets.base",
            "obj": "BaseCycle.plot_cycle",
            "line": 382,
            "column": 13,
            "path": "vclibpy/flowsheets/base.py",
            "symbol": "invalid-name",
            "message": "Variable name \"ax\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.flowsheets.base",
            "obj": "BaseCycle._plot_secondary_heat_flow_rates",
            "line": 410,
            "column": 46,
            "path": "vclibpy/flowsheets/base.py",
            "symbol": "invalid-name",
            "message": "Argument name \"ax\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.flowsheets.base",
            "obj": "BaseCycle._plot_secondary_heat_flow_rates",
            "line": 411,
            "column": 8,
            "path": "vclibpy/flowsheets/base.py",
            "symbol": "invalid-name",
            "message": "Variable name \"Q_con\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.flowsheets.base",
            "obj": "BaseCycle._plot_secondary_heat_flow_rates",
            "line": 412,
            "column": 8,
            "path": "vclibpy/flowsheets/base.py",
            "symbol": "invalid-name",
            "message": "Variable name \"Q_eva\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.flowsheets.base",
            "obj": "BaseCycle._plot_secondary_heat_flow_rates",
            "line": 414,
            "column": 8,
            "path": "vclibpy/flowsheets/base.py",
            "symbol": "invalid-name",
            "message": "Variable name \"delta_H_con\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.flowsheets.base",
            "obj": "BaseCycle._plot_secondary_heat_flow_rates",
            "line": 418,
            "column": 8,
            "path": "vclibpy/flowsheets/base.py",
            "symbol": "invalid-name",
            "message": "Variable name \"delta_H_eva\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.flowsheets.base",
            "obj": "",
            "line": 5,
            "column": 0,
            "path": "vclibpy/flowsheets/base.py",
            "symbol": "wrong-import-order",
            "message": "standard import \"from abc import abstractmethod\" should be placed before \"import numpy as np\"",
            "message-id": "C0411"
        },
        {
            "type": "convention",
            "module": "vclibpy.flowsheets.vapor_injection",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "vclibpy/flowsheets/vapor_injection.py",
            "symbol": "missing-module-docstring",
            "message": "Missing module docstring",
            "message-id": "C0114"
        },
        {
            "type": "convention",
            "module": "vclibpy.flowsheets.vapor_injection",
            "obj": "BaseVaporInjection.calc_states",
            "line": 84,
            "column": 8,
            "path": "vclibpy/flowsheets/vapor_injection.py",
            "symbol": "invalid-name",
            "message": "Variable name \"h_1_VI_mixed\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.flowsheets.vapor_injection",
            "obj": "BaseVaporInjection.calc_electrical_power",
            "line": 148,
            "column": 8,
            "path": "vclibpy/flowsheets/vapor_injection.py",
            "symbol": "invalid-name",
            "message": "Variable name \"P_el_low\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.flowsheets.vapor_injection",
            "obj": "BaseVaporInjection.calc_electrical_power",
            "line": 151,
            "column": 8,
            "path": "vclibpy/flowsheets/vapor_injection.py",
            "symbol": "invalid-name",
            "message": "Variable name \"P_el_high\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.flowsheets.standard",
            "obj": "",
            "line": 68,
            "column": 0,
            "path": "vclibpy/flowsheets/standard.py",
            "symbol": "line-too-long",
            "message": "Line too long (111/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "vclibpy.flowsheets.standard",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "vclibpy/flowsheets/standard.py",
            "symbol": "missing-module-docstring",
            "message": "Missing module docstring",
            "message-id": "C0114"
        },
        {
            "type": "convention",
            "module": "vclibpy.utils.sdf_",
            "obj": "",
            "line": 63,
            "column": 0,
            "path": "vclibpy/utils/sdf_.py",
            "symbol": "line-too-long",
            "message": "Line too long (108/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "vclibpy.utils.sdf_",
            "obj": "",
            "line": 147,
            "column": 0,
            "path": "vclibpy/utils/sdf_.py",
            "symbol": "line-too-long",
            "message": "Line too long (103/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "vclibpy.utils.sdf_",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "vclibpy/utils/sdf_.py",
            "symbol": "missing-module-docstring",
            "message": "Missing module docstring",
            "message-id": "C0114"
        },
        {
            "type": "refactor",
            "module": "vclibpy.utils.sdf_",
            "obj": "save_to_sdf",
            "line": 8,
            "column": 0,
            "path": "vclibpy/utils/sdf_.py",
            "symbol": "too-many-locals",
            "message": "Too many local variables (20/15)",
            "message-id": "R0914"
        },
        {
            "type": "convention",
            "module": "vclibpy.utils.sdf_",
            "obj": "sdf_to_csv",
            "line": 129,
            "column": 12,
            "path": "vclibpy/utils/sdf_.py",
            "symbol": "invalid-name",
            "message": "Variable name \"df\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.utils.sdf_",
            "obj": "sdf_to_csv",
            "line": 130,
            "column": 12,
            "path": "vclibpy/utils/sdf_.py",
            "symbol": "invalid-name",
            "message": "Variable name \"df\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "refactor",
            "module": "vclibpy.utils.sdf_",
            "obj": "_unpack_nd_data",
            "line": 147,
            "column": 23,
            "path": "vclibpy/utils/sdf_.py",
            "symbol": "unnecessary-comprehension",
            "message": "Unnecessary use of a comprehension, use list(enumerate(scale.data)) instead.",
            "message-id": "R1721"
        },
        {
            "type": "refactor",
            "module": "vclibpy.utils.sdf_",
            "obj": "_unpack_nd_data",
            "line": 150,
            "column": 18,
            "path": "vclibpy/utils/sdf_.py",
            "symbol": "consider-using-generator",
            "message": "Consider using a generator instead 'tuple(scale[0] for scale in scales)'",
            "message-id": "R1728"
        },
        {
            "type": "refactor",
            "module": "vclibpy.utils.sdf_",
            "obj": "_unpack_nd_data",
            "line": 154,
            "column": 14,
            "path": "vclibpy/utils/sdf_.py",
            "symbol": "unnecessary-comprehension",
            "message": "Unnecessary use of a comprehension, use dict(zip(scale_names, values)) instead.",
            "message-id": "R1721"
        },
        {
            "type": "convention",
            "module": "vclibpy.utils.nominal_design",
            "obj": "",
            "line": 11,
            "column": 29,
            "path": "vclibpy/utils/nominal_design.py",
            "symbol": "trailing-whitespace",
            "message": "Trailing whitespace",
            "message-id": "C0303"
        },
        {
            "type": "convention",
            "module": "vclibpy.utils.nominal_design",
            "obj": "",
            "line": 12,
            "column": 23,
            "path": "vclibpy/utils/nominal_design.py",
            "symbol": "trailing-whitespace",
            "message": "Trailing whitespace",
            "message-id": "C0303"
        },
        {
            "type": "convention",
            "module": "vclibpy.utils.nominal_design",
            "obj": "",
            "line": 72,
            "column": 0,
            "path": "vclibpy/utils/nominal_design.py",
            "symbol": "line-too-long",
            "message": "Line too long (105/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "vclibpy.utils.nominal_design",
            "obj": "",
            "line": 74,
            "column": 0,
            "path": "vclibpy/utils/nominal_design.py",
            "symbol": "line-too-long",
            "message": "Line too long (107/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "vclibpy.utils.nominal_design",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "vclibpy/utils/nominal_design.py",
            "symbol": "missing-module-docstring",
            "message": "Missing module docstring",
            "message-id": "C0114"
        },
        {
            "type": "convention",
            "module": "vclibpy.utils.nominal_design",
            "obj": "nominal_hp_design",
            "line": 14,
            "column": 8,
            "path": "vclibpy/utils/nominal_design.py",
            "symbol": "invalid-name",
            "message": "Argument name \"dT_con\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.utils.nominal_design",
            "obj": "nominal_hp_design",
            "line": 15,
            "column": 8,
            "path": "vclibpy/utils/nominal_design.py",
            "symbol": "invalid-name",
            "message": "Argument name \"dT_eva\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "refactor",
            "module": "vclibpy.utils.nominal_design",
            "obj": "nominal_hp_design",
            "line": 10,
            "column": 0,
            "path": "vclibpy/utils/nominal_design.py",
            "symbol": "too-many-locals",
            "message": "Too many local variables (19/15)",
            "message-id": "R0914"
        },
        {
            "type": "convention",
            "module": "vclibpy.utils.nominal_design",
            "obj": "nominal_hp_design",
            "line": 43,
            "column": 4,
            "path": "vclibpy/utils/nominal_design.py",
            "symbol": "invalid-name",
            "message": "Variable name \"t0\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "warning",
            "module": "vclibpy.utils.nominal_design",
            "obj": "nominal_hp_design",
            "line": 69,
            "column": 21,
            "path": "vclibpy/utils/nominal_design.py",
            "symbol": "protected-access",
            "message": "Access to a protected member _secondary_cp of a client class",
            "message-id": "W0212"
        },
        {
            "type": "warning",
            "module": "vclibpy.utils.nominal_design",
            "obj": "nominal_hp_design",
            "line": 70,
            "column": 21,
            "path": "vclibpy/utils/nominal_design.py",
            "symbol": "protected-access",
            "message": "Access to a protected member _secondary_cp of a client class",
            "message-id": "W0212"
        },
        {
            "type": "warning",
            "module": "vclibpy.utils.ten_coefficient_compressor_reqression",
            "obj": "",
            "line": 103,
            "column": 25,
            "path": "vclibpy/utils/ten_coefficient_compressor_reqression.py",
            "symbol": "fixme",
            "message": "TODO: Enable calculation of get_lambda_h etc. with p2 only",
            "message-id": "W0511"
        },
        {
            "type": "warning",
            "module": "vclibpy.utils.ten_coefficient_compressor_reqression",
            "obj": "",
            "line": 132,
            "column": 5,
            "path": "vclibpy/utils/ten_coefficient_compressor_reqression.py",
            "symbol": "fixme",
            "message": "TODO: Revert once this feature is in pandas.",
            "message-id": "W0511"
        },
        {
            "type": "convention",
            "module": "vclibpy.utils.ten_coefficient_compressor_reqression",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "vclibpy/utils/ten_coefficient_compressor_reqression.py",
            "symbol": "missing-module-docstring",
            "message": "Missing module docstring",
            "message-id": "C0114"
        },
        {
            "type": "warning",
            "module": "vclibpy.utils.ten_coefficient_compressor_reqression",
            "obj": "",
            "line": 13,
            "column": 4,
            "path": "vclibpy/utils/ten_coefficient_compressor_reqression.py",
            "symbol": "raise-missing-from",
            "message": "Consider explicitly re-raising using 'raise ImportError('You have to install xlsxwriter and sklearn to use this regression tool') from err'",
            "message-id": "W0707"
        },
        {
            "type": "convention",
            "module": "vclibpy.utils.ten_coefficient_compressor_reqression",
            "obj": "create_regression_data",
            "line": 19,
            "column": 8,
            "path": "vclibpy/utils/ten_coefficient_compressor_reqression.py",
            "symbol": "invalid-name",
            "message": "Argument name \"T_con\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.utils.ten_coefficient_compressor_reqression",
            "obj": "create_regression_data",
            "line": 19,
            "column": 28,
            "path": "vclibpy/utils/ten_coefficient_compressor_reqression.py",
            "symbol": "invalid-name",
            "message": "Argument name \"T_eva\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.utils.ten_coefficient_compressor_reqression",
            "obj": "create_regression_data",
            "line": 20,
            "column": 8,
            "path": "vclibpy/utils/ten_coefficient_compressor_reqression.py",
            "symbol": "invalid-name",
            "message": "Argument name \"T_sh\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.utils.ten_coefficient_compressor_reqression",
            "obj": "create_regression_data",
            "line": 20,
            "column": 21,
            "path": "vclibpy/utils/ten_coefficient_compressor_reqression.py",
            "symbol": "invalid-name",
            "message": "Argument name \"T_sc\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.utils.ten_coefficient_compressor_reqression",
            "obj": "create_regression_data",
            "line": 20,
            "column": 46,
            "path": "vclibpy/utils/ten_coefficient_compressor_reqression.py",
            "symbol": "invalid-name",
            "message": "Argument name \"V_h\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "refactor",
            "module": "vclibpy.utils.ten_coefficient_compressor_reqression",
            "obj": "create_regression_data",
            "line": 17,
            "column": 0,
            "path": "vclibpy/utils/ten_coefficient_compressor_reqression.py",
            "symbol": "too-many-arguments",
            "message": "Too many arguments (13/5)",
            "message-id": "R0913"
        },
        {
            "type": "refactor",
            "module": "vclibpy.utils.ten_coefficient_compressor_reqression",
            "obj": "create_regression_data",
            "line": 17,
            "column": 0,
            "path": "vclibpy/utils/ten_coefficient_compressor_reqression.py",
            "symbol": "too-many-locals",
            "message": "Too many local variables (42/15)",
            "message-id": "R0914"
        },
        {
            "type": "convention",
            "module": "vclibpy.utils.ten_coefficient_compressor_reqression",
            "obj": "create_regression_data",
            "line": 87,
            "column": 8,
            "path": "vclibpy/utils/ten_coefficient_compressor_reqression.py",
            "symbol": "invalid-name",
            "message": "Variable name \"m\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.utils.ten_coefficient_compressor_reqression",
            "obj": "create_regression_data",
            "line": 89,
            "column": 12,
            "path": "vclibpy/utils/ten_coefficient_compressor_reqression.py",
            "symbol": "invalid-name",
            "message": "Variable name \"T_eva_list\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.utils.ten_coefficient_compressor_reqression",
            "obj": "create_regression_data",
            "line": 90,
            "column": 12,
            "path": "vclibpy/utils/ten_coefficient_compressor_reqression.py",
            "symbol": "invalid-name",
            "message": "Variable name \"T_con_list\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.utils.ten_coefficient_compressor_reqression",
            "obj": "create_regression_data",
            "line": 93,
            "column": 12,
            "path": "vclibpy/utils/ten_coefficient_compressor_reqression.py",
            "symbol": "consider-using-enumerate",
            "message": "Consider using enumerate instead of iterating with range and len",
            "message-id": "C0200"
        },
        {
            "type": "convention",
            "module": "vclibpy.utils.ten_coefficient_compressor_reqression",
            "obj": "create_regression_data",
            "line": 95,
            "column": 16,
            "path": "vclibpy/utils/ten_coefficient_compressor_reqression.py",
            "symbol": "consider-using-enumerate",
            "message": "Consider using enumerate instead of iterating with range and len",
            "message-id": "C0200"
        },
        {
            "type": "convention",
            "module": "vclibpy.utils.ten_coefficient_compressor_reqression",
            "obj": "create_regression_data",
            "line": 97,
            "column": 24,
            "path": "vclibpy/utils/ten_coefficient_compressor_reqression.py",
            "symbol": "invalid-name",
            "message": "Variable name \"p1\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.utils.ten_coefficient_compressor_reqression",
            "obj": "create_regression_data",
            "line": 100,
            "column": 24,
            "path": "vclibpy/utils/ten_coefficient_compressor_reqression.py",
            "symbol": "invalid-name",
            "message": "Variable name \"p2\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.utils.ten_coefficient_compressor_reqression",
            "obj": "create_regression_data",
            "line": 119,
            "column": 12,
            "path": "vclibpy/utils/ten_coefficient_compressor_reqression.py",
            "symbol": "invalid-name",
            "message": "Variable name \"df\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.utils.ten_coefficient_compressor_reqression",
            "obj": "create_regression_data",
            "line": 137,
            "column": 75,
            "path": "vclibpy/utils/ten_coefficient_compressor_reqression.py",
            "symbol": "invalid-name",
            "message": "Variable name \"f\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "refactor",
            "module": "vclibpy.utils.ten_coefficient_compressor_reqression",
            "obj": "create_regression_data",
            "line": 87,
            "column": 4,
            "path": "vclibpy/utils/ten_coefficient_compressor_reqression.py",
            "symbol": "too-many-nested-blocks",
            "message": "Too many nested blocks (6/5)",
            "message-id": "R1702"
        },
        {
            "type": "convention",
            "module": "vclibpy.utils.ten_coefficient_compressor_reqression",
            "obj": "create_regression_data",
            "line": 139,
            "column": 12,
            "path": "vclibpy/utils/ten_coefficient_compressor_reqression.py",
            "symbol": "invalid-name",
            "message": "Variable name \"r\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.utils.ten_coefficient_compressor_reqression",
            "obj": "create_regression_data",
            "line": 140,
            "column": 16,
            "path": "vclibpy/utils/ten_coefficient_compressor_reqression.py",
            "symbol": "invalid-name",
            "message": "Variable name \"c\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.utils.ten_coefficient_compressor_reqression",
            "obj": "create_regression_parameters",
            "line": 145,
            "column": 33,
            "path": "vclibpy/utils/ten_coefficient_compressor_reqression.py",
            "symbol": "invalid-name",
            "message": "Argument name \"df\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.utils.ten_coefficient_compressor_reqression",
            "obj": "create_regression_parameters",
            "line": 168,
            "column": 4,
            "path": "vclibpy/utils/ten_coefficient_compressor_reqression.py",
            "symbol": "invalid-name",
            "message": "Variable name \"z\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.utils.ten_coefficient_compressor_reqression",
            "obj": "create_regression_parameters",
            "line": 172,
            "column": 4,
            "path": "vclibpy/utils/ten_coefficient_compressor_reqression.py",
            "symbol": "invalid-name",
            "message": "Variable name \"X\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.utils",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "vclibpy/utils/__init__.py",
            "symbol": "missing-module-docstring",
            "message": "Missing module docstring",
            "message-id": "C0114"
        },
        {
            "type": "convention",
            "module": "vclibpy.utils.plotting",
            "obj": "",
            "line": 22,
            "column": 0,
            "path": "vclibpy/utils/plotting.py",
            "symbol": "line-too-long",
            "message": "Line too long (103/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "vclibpy.utils.plotting",
            "obj": "",
            "line": 164,
            "column": 0,
            "path": "vclibpy/utils/plotting.py",
            "symbol": "line-too-long",
            "message": "Line too long (105/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "vclibpy.utils.plotting",
            "obj": "",
            "line": 196,
            "column": 0,
            "path": "vclibpy/utils/plotting.py",
            "symbol": "line-too-long",
            "message": "Line too long (116/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "vclibpy.utils.plotting",
            "obj": "",
            "line": 202,
            "column": 0,
            "path": "vclibpy/utils/plotting.py",
            "symbol": "line-too-long",
            "message": "Line too long (111/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "vclibpy.utils.plotting",
            "obj": "",
            "line": 225,
            "column": 0,
            "path": "vclibpy/utils/plotting.py",
            "symbol": "line-too-long",
            "message": "Line too long (129/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "vclibpy.utils.plotting",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "vclibpy/utils/plotting.py",
            "symbol": "missing-module-docstring",
            "message": "Missing module docstring",
            "message-id": "C0114"
        },
        {
            "type": "refactor",
            "module": "vclibpy.utils.plotting",
            "obj": "plot_sdf_map",
            "line": 9,
            "column": 0,
            "path": "vclibpy/utils/plotting.py",
            "symbol": "too-many-arguments",
            "message": "Too many arguments (8/5)",
            "message-id": "R0913"
        },
        {
            "type": "refactor",
            "module": "vclibpy.utils.plotting",
            "obj": "plot_sdf_map",
            "line": 9,
            "column": 0,
            "path": "vclibpy/utils/plotting.py",
            "symbol": "too-many-locals",
            "message": "Too many local variables (53/15)",
            "message-id": "R0914"
        },
        {
            "type": "convention",
            "module": "vclibpy.utils.plotting",
            "obj": "plot_sdf_map",
            "line": 74,
            "column": 4,
            "path": "vclibpy/utils/plotting.py",
            "symbol": "invalid-name",
            "message": "Variable name \"plot_4D\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.utils.plotting",
            "obj": "plot_sdf_map",
            "line": 76,
            "column": 8,
            "path": "vclibpy/utils/plotting.py",
            "symbol": "invalid-name",
            "message": "Variable name \"plot_4D\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.utils.plotting",
            "obj": "plot_sdf_map",
            "line": 121,
            "column": 12,
            "path": "vclibpy/utils/plotting.py",
            "symbol": "invalid-name",
            "message": "Variable name \"nd\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.utils.plotting",
            "obj": "plot_sdf_map",
            "line": 121,
            "column": 16,
            "path": "vclibpy/utils/plotting.py",
            "symbol": "invalid-name",
            "message": "Variable name \"fd\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.utils.plotting",
            "obj": "plot_sdf_map",
            "line": 121,
            "column": 20,
            "path": "vclibpy/utils/plotting.py",
            "symbol": "invalid-name",
            "message": "Variable name \"sd\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.utils.plotting",
            "obj": "plot_sdf_map",
            "line": 121,
            "column": 34,
            "path": "vclibpy/utils/plotting.py",
            "symbol": "invalid-name",
            "message": "Variable name \"td\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.utils.plotting",
            "obj": "plot_sdf_map",
            "line": 123,
            "column": 16,
            "path": "vclibpy/utils/plotting.py",
            "symbol": "invalid-name",
            "message": "Variable name \"ds\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.utils.plotting",
            "obj": "plot_sdf_map",
            "line": 125,
            "column": 20,
            "path": "vclibpy/utils/plotting.py",
            "symbol": "invalid-name",
            "message": "Variable name \"nd\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.utils.plotting",
            "obj": "plot_sdf_map",
            "line": 127,
            "column": 20,
            "path": "vclibpy/utils/plotting.py",
            "symbol": "invalid-name",
            "message": "Variable name \"fd\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.utils.plotting",
            "obj": "plot_sdf_map",
            "line": 129,
            "column": 20,
            "path": "vclibpy/utils/plotting.py",
            "symbol": "invalid-name",
            "message": "Variable name \"sd\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.utils.plotting",
            "obj": "plot_sdf_map",
            "line": 136,
            "column": 20,
            "path": "vclibpy/utils/plotting.py",
            "symbol": "invalid-name",
            "message": "Variable name \"td\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.utils.plotting",
            "obj": "plot_sdf_map",
            "line": 156,
            "column": 16,
            "path": "vclibpy/utils/plotting.py",
            "symbol": "invalid-name",
            "message": "Variable name \"ax\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.utils.plotting",
            "obj": "plot_sdf_map",
            "line": 166,
            "column": 16,
            "path": "vclibpy/utils/plotting.py",
            "symbol": "import-outside-toplevel",
            "message": "Import outside toplevel (itertools)",
            "message-id": "C0415"
        },
        {
            "type": "refactor",
            "module": "vclibpy.utils.plotting",
            "obj": "plot_sdf_map",
            "line": 167,
            "column": 39,
            "path": "vclibpy/utils/plotting.py",
            "symbol": "unnecessary-comprehension",
            "message": "Unnecessary use of a comprehension, use list(itertools.product(*inp)) instead.",
            "message-id": "R1721"
        },
        {
            "type": "convention",
            "module": "vclibpy.utils.plotting",
            "obj": "plot_sdf_map",
            "line": 177,
            "column": 28,
            "path": "vclibpy/utils/plotting.py",
            "symbol": "invalid-name",
            "message": "Variable name \"Z\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "refactor",
            "module": "vclibpy.utils.plotting",
            "obj": "plot_sdf_map",
            "line": 114,
            "column": 4,
            "path": "vclibpy/utils/plotting.py",
            "symbol": "too-many-nested-blocks",
            "message": "Too many nested blocks (7/5)",
            "message-id": "R1702"
        },
        {
            "type": "convention",
            "module": "vclibpy.utils.plotting",
            "obj": "plot_sdf_map",
            "line": 183,
            "column": 28,
            "path": "vclibpy/utils/plotting.py",
            "symbol": "invalid-name",
            "message": "Variable name \"Z\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.utils.plotting",
            "obj": "plot_sdf_map",
            "line": 189,
            "column": 28,
            "path": "vclibpy/utils/plotting.py",
            "symbol": "invalid-name",
            "message": "Variable name \"Z\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "refactor",
            "module": "vclibpy.utils.plotting",
            "obj": "plot_sdf_map",
            "line": 114,
            "column": 4,
            "path": "vclibpy/utils/plotting.py",
            "symbol": "too-many-nested-blocks",
            "message": "Too many nested blocks (7/5)",
            "message-id": "R1702"
        },
        {
            "type": "convention",
            "module": "vclibpy.utils.plotting",
            "obj": "plot_sdf_map",
            "line": 198,
            "column": 28,
            "path": "vclibpy/utils/plotting.py",
            "symbol": "invalid-name",
            "message": "Variable name \"ax\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.utils.plotting",
            "obj": "plot_sdf_map",
            "line": 201,
            "column": 28,
            "path": "vclibpy/utils/plotting.py",
            "symbol": "invalid-name",
            "message": "Variable name \"X\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.utils.plotting",
            "obj": "plot_sdf_map",
            "line": 201,
            "column": 31,
            "path": "vclibpy/utils/plotting.py",
            "symbol": "invalid-name",
            "message": "Variable name \"Y\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "refactor",
            "module": "vclibpy.utils.plotting",
            "obj": "plot_sdf_map",
            "line": 114,
            "column": 4,
            "path": "vclibpy/utils/plotting.py",
            "symbol": "too-many-nested-blocks",
            "message": "Too many nested blocks (6/5)",
            "message-id": "R1702"
        },
        {
            "type": "refactor",
            "module": "vclibpy.utils.plotting",
            "obj": "plot_sdf_map",
            "line": 9,
            "column": 0,
            "path": "vclibpy/utils/plotting.py",
            "symbol": "too-many-branches",
            "message": "Too many branches (50/12)",
            "message-id": "R0912"
        },
        {
            "type": "refactor",
            "module": "vclibpy.utils.plotting",
            "obj": "plot_sdf_map",
            "line": 9,
            "column": 0,
            "path": "vclibpy/utils/plotting.py",
            "symbol": "too-many-statements",
            "message": "Too many statements (133/50)",
            "message-id": "R0915"
        },
        {
            "type": "convention",
            "module": "vclibpy.utils.plotting",
            "obj": "set_axis_style",
            "line": 223,
            "column": 19,
            "path": "vclibpy/utils/plotting.py",
            "symbol": "invalid-name",
            "message": "Argument name \"ax\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.utils.automation",
            "obj": "",
            "line": 52,
            "column": 0,
            "path": "vclibpy/utils/automation.py",
            "symbol": "line-too-long",
            "message": "Line too long (119/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "vclibpy.utils.automation",
            "obj": "",
            "line": 101,
            "column": 0,
            "path": "vclibpy/utils/automation.py",
            "symbol": "line-too-long",
            "message": "Line too long (123/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "vclibpy.utils.automation",
            "obj": "",
            "line": 145,
            "column": 0,
            "path": "vclibpy/utils/automation.py",
            "symbol": "line-too-long",
            "message": "Line too long (104/100)",
            "message-id": "C0301"
        },
        {
            "type": "warning",
            "module": "vclibpy.utils.automation",
            "obj": "calc_multiple_states",
            "line": 36,
            "column": 8,
            "path": "vclibpy/utils/automation.py",
            "symbol": "logging-fstring-interpolation",
            "message": "Use lazy % formatting in logging functions",
            "message-id": "W1203"
        },
        {
            "type": "warning",
            "module": "vclibpy.utils.automation",
            "obj": "calc_multiple_states",
            "line": 40,
            "column": 15,
            "path": "vclibpy/utils/automation.py",
            "symbol": "broad-exception-caught",
            "message": "Catching too general exception Exception",
            "message-id": "W0718"
        },
        {
            "type": "convention",
            "module": "vclibpy.utils.automation",
            "obj": "calc_multiple_states",
            "line": 40,
            "column": 8,
            "path": "vclibpy/utils/automation.py",
            "symbol": "invalid-name",
            "message": "Variable name \"e\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "warning",
            "module": "vclibpy.utils.automation",
            "obj": "calc_multiple_states",
            "line": 42,
            "column": 12,
            "path": "vclibpy/utils/automation.py",
            "symbol": "logging-fstring-interpolation",
            "message": "Use lazy % formatting in logging functions",
            "message-id": "W1203"
        },
        {
            "type": "convention",
            "module": "vclibpy.utils.automation",
            "obj": "calc_multiple_states",
            "line": 50,
            "column": 4,
            "path": "vclibpy/utils/automation.py",
            "symbol": "invalid-name",
            "message": "Variable name \"df\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.utils.automation",
            "obj": "full_factorial_map_generation",
            "line": 57,
            "column": 8,
            "path": "vclibpy/utils/automation.py",
            "symbol": "invalid-name",
            "message": "Argument name \"T_eva_in_ar\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.utils.automation",
            "obj": "full_factorial_map_generation",
            "line": 58,
            "column": 8,
            "path": "vclibpy/utils/automation.py",
            "symbol": "invalid-name",
            "message": "Argument name \"T_con_in_ar\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.utils.automation",
            "obj": "full_factorial_map_generation",
            "line": 63,
            "column": 8,
            "path": "vclibpy/utils/automation.py",
            "symbol": "invalid-name",
            "message": "Argument name \"dT_eva_superheating\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.utils.automation",
            "obj": "full_factorial_map_generation",
            "line": 64,
            "column": 8,
            "path": "vclibpy/utils/automation.py",
            "symbol": "invalid-name",
            "message": "Argument name \"dT_con_subcooling\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "refactor",
            "module": "vclibpy.utils.automation",
            "obj": "full_factorial_map_generation",
            "line": 55,
            "column": 0,
            "path": "vclibpy/utils/automation.py",
            "symbol": "too-many-arguments",
            "message": "Too many arguments (11/5)",
            "message-id": "R0913"
        },
        {
            "type": "refactor",
            "module": "vclibpy.utils.automation",
            "obj": "full_factorial_map_generation",
            "line": 55,
            "column": 0,
            "path": "vclibpy/utils/automation.py",
            "symbol": "too-many-locals",
            "message": "Too many local variables (44/15)",
            "message-id": "R0914"
        },
        {
            "type": "convention",
            "module": "vclibpy.utils.automation",
            "obj": "full_factorial_map_generation",
            "line": 107,
            "column": 8,
            "path": "vclibpy/utils/automation.py",
            "symbol": "invalid-name",
            "message": "Variable name \"i_T_eva_in\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.utils.automation",
            "obj": "full_factorial_map_generation",
            "line": 107,
            "column": 20,
            "path": "vclibpy/utils/automation.py",
            "symbol": "invalid-name",
            "message": "Variable name \"T_eva_in\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.utils.automation",
            "obj": "full_factorial_map_generation",
            "line": 109,
            "column": 16,
            "path": "vclibpy/utils/automation.py",
            "symbol": "invalid-name",
            "message": "Variable name \"i_T_con_in\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.utils.automation",
            "obj": "full_factorial_map_generation",
            "line": 109,
            "column": 28,
            "path": "vclibpy/utils/automation.py",
            "symbol": "invalid-name",
            "message": "Variable name \"T_con_in\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "warning",
            "module": "vclibpy.utils.automation",
            "obj": "full_factorial_map_generation",
            "line": 127,
            "column": 12,
            "path": "vclibpy/utils/automation.py",
            "symbol": "logging-fstring-interpolation",
            "message": "Use lazy % formatting in logging functions",
            "message-id": "W1203"
        },
        {
            "type": "warning",
            "module": "vclibpy.utils.automation",
            "obj": "full_factorial_map_generation",
            "line": 133,
            "column": 12,
            "path": "vclibpy/utils/automation.py",
            "symbol": "logging-fstring-interpolation",
            "message": "Use lazy % formatting in logging functions",
            "message-id": "W1203"
        },
        {
            "type": "refactor",
            "module": "vclibpy.utils.automation",
            "obj": "full_factorial_map_generation",
            "line": 145,
            "column": 34,
            "path": "vclibpy/utils/automation.py",
            "symbol": "unnecessary-comprehension",
            "message": "Unnecessary use of a comprehension, use dict(fs_state.get_variables().items()) instead.",
            "message-id": "R1721"
        },
        {
            "type": "convention",
            "module": "vclibpy.utils.automation",
            "obj": "full_factorial_map_generation",
            "line": 159,
            "column": 13,
            "path": "vclibpy/utils/automation.py",
            "symbol": "invalid-name",
            "message": "Variable name \"i_T_con_in\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.utils.automation",
            "obj": "full_factorial_map_generation",
            "line": 159,
            "column": 25,
            "path": "vclibpy/utils/automation.py",
            "symbol": "invalid-name",
            "message": "Variable name \"i_T_eva_in\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "refactor",
            "module": "vclibpy.utils.automation",
            "obj": "full_factorial_map_generation",
            "line": 55,
            "column": 0,
            "path": "vclibpy/utils/automation.py",
            "symbol": "too-many-branches",
            "message": "Too many branches (16/12)",
            "message-id": "R0912"
        },
        {
            "type": "refactor",
            "module": "vclibpy.utils.automation",
            "obj": "full_factorial_map_generation",
            "line": 55,
            "column": 0,
            "path": "vclibpy/utils/automation.py",
            "symbol": "too-many-statements",
            "message": "Too many statements (51/50)",
            "message-id": "R0915"
        },
        {
            "type": "refactor",
            "module": "vclibpy.utils.automation",
            "obj": "full_factorial_map_generation",
            "line": 123,
            "column": 15,
            "path": "vclibpy/utils/automation.py",
            "symbol": "consider-using-with",
            "message": "Consider using 'with' for resource-allocating operations",
            "message-id": "R1732"
        },
        {
            "type": "warning",
            "module": "vclibpy.utils.automation",
            "obj": "_calc_single_hp_state",
            "line": 215,
            "column": 11,
            "path": "vclibpy/utils/automation.py",
            "symbol": "broad-exception-caught",
            "message": "Catching too general exception Exception",
            "message-id": "W0718"
        },
        {
            "type": "convention",
            "module": "vclibpy.utils.automation",
            "obj": "_calc_single_hp_state",
            "line": 215,
            "column": 4,
            "path": "vclibpy/utils/automation.py",
            "symbol": "invalid-name",
            "message": "Variable name \"e\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "warning",
            "module": "vclibpy.utils.automation",
            "obj": "_calc_single_hp_state",
            "line": 216,
            "column": 8,
            "path": "vclibpy/utils/automation.py",
            "symbol": "logging-fstring-interpolation",
            "message": "Use lazy % formatting in logging functions",
            "message-id": "W1203"
        },
        {
            "type": "convention",
            "module": "vclibpy.media.states",
            "obj": "",
            "line": 59,
            "column": 0,
            "path": "vclibpy/media/states.py",
            "symbol": "line-too-long",
            "message": "Line too long (119/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "vclibpy.media.states",
            "obj": "",
            "line": 173,
            "column": 0,
            "path": "vclibpy/media/states.py",
            "symbol": "line-too-long",
            "message": "Line too long (102/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "vclibpy.media.states",
            "obj": "",
            "line": 174,
            "column": 0,
            "path": "vclibpy/media/states.py",
            "symbol": "line-too-long",
            "message": "Line too long (104/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "vclibpy.media.states",
            "obj": "",
            "line": 175,
            "column": 0,
            "path": "vclibpy/media/states.py",
            "symbol": "line-too-long",
            "message": "Line too long (107/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "vclibpy.media.states",
            "obj": "",
            "line": 177,
            "column": 0,
            "path": "vclibpy/media/states.py",
            "symbol": "line-too-long",
            "message": "Line too long (112/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "vclibpy.media.states",
            "obj": "",
            "line": 178,
            "column": 0,
            "path": "vclibpy/media/states.py",
            "symbol": "line-too-long",
            "message": "Line too long (113/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "vclibpy.media.states",
            "obj": "",
            "line": 179,
            "column": 0,
            "path": "vclibpy/media/states.py",
            "symbol": "line-too-long",
            "message": "Line too long (109/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "vclibpy.media.states",
            "obj": "",
            "line": 180,
            "column": 0,
            "path": "vclibpy/media/states.py",
            "symbol": "line-too-long",
            "message": "Line too long (101/100)",
            "message-id": "C0301"
        },
        {
            "type": "refactor",
            "module": "vclibpy.media.states",
            "obj": "ThermodynamicState",
            "line": 13,
            "column": 0,
            "path": "vclibpy/media/states.py",
            "symbol": "too-many-instance-attributes",
            "message": "Too many instance attributes (8/7)",
            "message-id": "R0902"
        },
        {
            "type": "refactor",
            "module": "vclibpy.media.states",
            "obj": "ThermodynamicState.__init__",
            "line": 36,
            "column": 4,
            "path": "vclibpy/media/states.py",
            "symbol": "too-many-arguments",
            "message": "Too many arguments (9/5)",
            "message-id": "R0913"
        },
        {
            "type": "refactor",
            "module": "vclibpy.media.states",
            "obj": "TransportProperties",
            "line": 102,
            "column": 0,
            "path": "vclibpy/media/states.py",
            "symbol": "too-many-instance-attributes",
            "message": "Too many instance attributes (10/7)",
            "message-id": "R0902"
        },
        {
            "type": "convention",
            "module": "vclibpy.media.states",
            "obj": "TransportProperties.__init__",
            "line": 128,
            "column": 17,
            "path": "vclibpy/media/states.py",
            "symbol": "invalid-name",
            "message": "Argument name \"pr\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "refactor",
            "module": "vclibpy.media.states",
            "obj": "TransportProperties.__init__",
            "line": 124,
            "column": 4,
            "path": "vclibpy/media/states.py",
            "symbol": "too-many-arguments",
            "message": "Too many arguments (11/5)",
            "message-id": "R0913"
        },
        {
            "type": "convention",
            "module": "vclibpy.media",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "vclibpy/media/__init__.py",
            "symbol": "missing-module-docstring",
            "message": "Missing module docstring",
            "message-id": "C0114"
        },
        {
            "type": "warning",
            "module": "vclibpy.media",
            "obj": "set_global_media_properties",
            "line": 27,
            "column": 4,
            "path": "vclibpy/media/__init__.py",
            "symbol": "global-statement",
            "message": "Using the global statement",
            "message-id": "W0603"
        },
        {
            "type": "warning",
            "module": "vclibpy.media",
            "obj": "get_global_med_prop_and_kwargs",
            "line": 38,
            "column": 4,
            "path": "vclibpy/media/__init__.py",
            "symbol": "global-variable-not-assigned",
            "message": "Using global for 'USED_MED_PROP' but no assignment is done",
            "message-id": "W0602"
        },
        {
            "type": "convention",
            "module": "vclibpy.media.media",
            "obj": "",
            "line": 10,
            "column": 0,
            "path": "vclibpy/media/media.py",
            "symbol": "line-too-long",
            "message": "Line too long (105/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "vclibpy.media.media",
            "obj": "",
            "line": 53,
            "column": 0,
            "path": "vclibpy/media/media.py",
            "symbol": "line-too-long",
            "message": "Line too long (111/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "vclibpy.media.media",
            "obj": "",
            "line": 58,
            "column": 0,
            "path": "vclibpy/media/media.py",
            "symbol": "line-too-long",
            "message": "Line too long (118/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "vclibpy.media.media",
            "obj": "",
            "line": 139,
            "column": 0,
            "path": "vclibpy/media/media.py",
            "symbol": "line-too-long",
            "message": "Line too long (110/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "vclibpy.media.media",
            "obj": "",
            "line": 140,
            "column": 0,
            "path": "vclibpy/media/media.py",
            "symbol": "line-too-long",
            "message": "Line too long (113/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "vclibpy.media.media",
            "obj": "",
            "line": 141,
            "column": 0,
            "path": "vclibpy/media/media.py",
            "symbol": "line-too-long",
            "message": "Line too long (104/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "vclibpy.media.media",
            "obj": "",
            "line": 145,
            "column": 0,
            "path": "vclibpy/media/media.py",
            "symbol": "line-too-long",
            "message": "Line too long (103/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "vclibpy.media.media",
            "obj": "",
            "line": 160,
            "column": 0,
            "path": "vclibpy/media/media.py",
            "symbol": "line-too-long",
            "message": "Line too long (108/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "vclibpy.media.media",
            "obj": "",
            "line": 161,
            "column": 0,
            "path": "vclibpy/media/media.py",
            "symbol": "line-too-long",
            "message": "Line too long (105/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "vclibpy.media.media",
            "obj": "",
            "line": 206,
            "column": 0,
            "path": "vclibpy/media/media.py",
            "symbol": "line-too-long",
            "message": "Line too long (115/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "vclibpy.media.media",
            "obj": "",
            "line": 210,
            "column": 0,
            "path": "vclibpy/media/media.py",
            "symbol": "line-too-long",
            "message": "Line too long (118/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "vclibpy.media.media",
            "obj": "",
            "line": 218,
            "column": 0,
            "path": "vclibpy/media/media.py",
            "symbol": "line-too-long",
            "message": "Line too long (107/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "vclibpy.media.media",
            "obj": "",
            "line": 221,
            "column": 0,
            "path": "vclibpy/media/media.py",
            "symbol": "line-too-long",
            "message": "Line too long (116/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "vclibpy.media.media",
            "obj": "",
            "line": 222,
            "column": 0,
            "path": "vclibpy/media/media.py",
            "symbol": "line-too-long",
            "message": "Line too long (110/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "vclibpy.media.media",
            "obj": "",
            "line": 223,
            "column": 0,
            "path": "vclibpy/media/media.py",
            "symbol": "line-too-long",
            "message": "Line too long (108/100)",
            "message-id": "C0301"
        },
        {
            "type": "warning",
            "module": "vclibpy.media.media",
            "obj": "MedProp.calc_state",
            "line": 50,
            "column": 36,
            "path": "vclibpy/media/media.py",
            "symbol": "unused-argument",
            "message": "Unused argument 'var1'",
            "message-id": "W0613"
        },
        {
            "type": "warning",
            "module": "vclibpy.media.media",
            "obj": "MedProp.calc_state",
            "line": 50,
            "column": 49,
            "path": "vclibpy/media/media.py",
            "symbol": "unused-argument",
            "message": "Unused argument 'var2'",
            "message-id": "W0613"
        },
        {
            "type": "warning",
            "module": "vclibpy.media.media",
            "obj": "MedProp.terminate",
            "line": 102,
            "column": 8,
            "path": "vclibpy/media/media.py",
            "symbol": "unnecessary-pass",
            "message": "Unnecessary pass statement",
            "message-id": "W0107"
        },
        {
            "type": "warning",
            "module": "vclibpy.media.media",
            "obj": "MedProp.calc_transport_properties",
            "line": 114,
            "column": 8,
            "path": "vclibpy/media/media.py",
            "symbol": "unnecessary-pass",
            "message": "Unnecessary pass statement",
            "message-id": "W0107"
        },
        {
            "type": "warning",
            "module": "vclibpy.media.media",
            "obj": "MedProp.get_critical_point",
            "line": 124,
            "column": 8,
            "path": "vclibpy/media/media.py",
            "symbol": "unnecessary-pass",
            "message": "Unnecessary pass statement",
            "message-id": "W0107"
        },
        {
            "type": "warning",
            "module": "vclibpy.media.media",
            "obj": "MedProp.get_molar_mass",
            "line": 133,
            "column": 8,
            "path": "vclibpy/media/media.py",
            "symbol": "unnecessary-pass",
            "message": "Unnecessary pass statement",
            "message-id": "W0107"
        },
        {
            "type": "convention",
            "module": "vclibpy.media.media",
            "obj": "get_two_phase_limits",
            "line": 227,
            "column": 4,
            "path": "vclibpy/media/media.py",
            "symbol": "invalid-name",
            "message": "Variable name \"q0\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.media.media",
            "obj": "get_two_phase_limits",
            "line": 227,
            "column": 8,
            "path": "vclibpy/media/media.py",
            "symbol": "invalid-name",
            "message": "Variable name \"q1\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.media.ref_prop",
            "obj": "",
            "line": 10,
            "column": 0,
            "path": "vclibpy/media/ref_prop.py",
            "symbol": "line-too-long",
            "message": "Line too long (120/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "vclibpy.media.ref_prop",
            "obj": "",
            "line": 35,
            "column": 0,
            "path": "vclibpy/media/ref_prop.py",
            "symbol": "line-too-long",
            "message": "Line too long (109/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "vclibpy.media.ref_prop",
            "obj": "",
            "line": 66,
            "column": 0,
            "path": "vclibpy/media/ref_prop.py",
            "symbol": "line-too-long",
            "message": "Line too long (113/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "vclibpy.media.ref_prop",
            "obj": "",
            "line": 67,
            "column": 0,
            "path": "vclibpy/media/ref_prop.py",
            "symbol": "line-too-long",
            "message": "Line too long (106/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "vclibpy.media.ref_prop",
            "obj": "",
            "line": 73,
            "column": 0,
            "path": "vclibpy/media/ref_prop.py",
            "symbol": "line-too-long",
            "message": "Line too long (120/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "vclibpy.media.ref_prop",
            "obj": "",
            "line": 74,
            "column": 0,
            "path": "vclibpy/media/ref_prop.py",
            "symbol": "line-too-long",
            "message": "Line too long (109/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "vclibpy.media.ref_prop",
            "obj": "",
            "line": 115,
            "column": 0,
            "path": "vclibpy/media/ref_prop.py",
            "symbol": "line-too-long",
            "message": "Line too long (103/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "vclibpy.media.ref_prop",
            "obj": "",
            "line": 117,
            "column": 0,
            "path": "vclibpy/media/ref_prop.py",
            "symbol": "line-too-long",
            "message": "Line too long (117/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "vclibpy.media.ref_prop",
            "obj": "",
            "line": 209,
            "column": 0,
            "path": "vclibpy/media/ref_prop.py",
            "symbol": "line-too-long",
            "message": "Line too long (116/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "vclibpy.media.ref_prop",
            "obj": "",
            "line": 271,
            "column": 0,
            "path": "vclibpy/media/ref_prop.py",
            "symbol": "line-too-long",
            "message": "Line too long (111/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "vclibpy.media.ref_prop",
            "obj": "",
            "line": 274,
            "column": 0,
            "path": "vclibpy/media/ref_prop.py",
            "symbol": "line-too-long",
            "message": "Line too long (111/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "vclibpy.media.ref_prop",
            "obj": "",
            "line": 279,
            "column": 0,
            "path": "vclibpy/media/ref_prop.py",
            "symbol": "line-too-long",
            "message": "Line too long (116/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "vclibpy.media.ref_prop",
            "obj": "",
            "line": 282,
            "column": 0,
            "path": "vclibpy/media/ref_prop.py",
            "symbol": "line-too-long",
            "message": "Line too long (119/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "vclibpy.media.ref_prop",
            "obj": "",
            "line": 303,
            "column": 0,
            "path": "vclibpy/media/ref_prop.py",
            "symbol": "line-too-long",
            "message": "Line too long (111/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "vclibpy.media.ref_prop",
            "obj": "",
            "line": 324,
            "column": 0,
            "path": "vclibpy/media/ref_prop.py",
            "symbol": "line-too-long",
            "message": "Line too long (103/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "vclibpy.media.ref_prop",
            "obj": "",
            "line": 336,
            "column": 0,
            "path": "vclibpy/media/ref_prop.py",
            "symbol": "line-too-long",
            "message": "Line too long (144/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "vclibpy.media.ref_prop",
            "obj": "",
            "line": 339,
            "column": 0,
            "path": "vclibpy/media/ref_prop.py",
            "symbol": "line-too-long",
            "message": "Line too long (116/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "vclibpy.media.ref_prop",
            "obj": "",
            "line": 406,
            "column": 0,
            "path": "vclibpy/media/ref_prop.py",
            "symbol": "line-too-long",
            "message": "Line too long (112/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "vclibpy.media.ref_prop",
            "obj": "",
            "line": 407,
            "column": 0,
            "path": "vclibpy/media/ref_prop.py",
            "symbol": "line-too-long",
            "message": "Line too long (110/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "vclibpy.media.ref_prop",
            "obj": "",
            "line": 408,
            "column": 0,
            "path": "vclibpy/media/ref_prop.py",
            "symbol": "line-too-long",
            "message": "Line too long (117/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "vclibpy.media.ref_prop",
            "obj": "",
            "line": 411,
            "column": 0,
            "path": "vclibpy/media/ref_prop.py",
            "symbol": "line-too-long",
            "message": "Line too long (104/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "vclibpy.media.ref_prop",
            "obj": "",
            "line": 412,
            "column": 0,
            "path": "vclibpy/media/ref_prop.py",
            "symbol": "line-too-long",
            "message": "Line too long (115/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "vclibpy.media.ref_prop",
            "obj": "",
            "line": 415,
            "column": 0,
            "path": "vclibpy/media/ref_prop.py",
            "symbol": "line-too-long",
            "message": "Line too long (105/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "vclibpy.media.ref_prop",
            "obj": "",
            "line": 425,
            "column": 0,
            "path": "vclibpy/media/ref_prop.py",
            "symbol": "line-too-long",
            "message": "Line too long (103/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "vclibpy.media.ref_prop",
            "obj": "",
            "line": 478,
            "column": 0,
            "path": "vclibpy/media/ref_prop.py",
            "symbol": "line-too-long",
            "message": "Line too long (110/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "vclibpy.media.ref_prop",
            "obj": "",
            "line": 479,
            "column": 0,
            "path": "vclibpy/media/ref_prop.py",
            "symbol": "line-too-long",
            "message": "Line too long (110/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "vclibpy.media.ref_prop",
            "obj": "",
            "line": 490,
            "column": 0,
            "path": "vclibpy/media/ref_prop.py",
            "symbol": "line-too-long",
            "message": "Line too long (120/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "vclibpy.media.ref_prop",
            "obj": "",
            "line": 510,
            "column": 0,
            "path": "vclibpy/media/ref_prop.py",
            "symbol": "line-too-long",
            "message": "Line too long (120/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "vclibpy.media.ref_prop",
            "obj": "",
            "line": 542,
            "column": 0,
            "path": "vclibpy/media/ref_prop.py",
            "symbol": "line-too-long",
            "message": "Line too long (110/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "vclibpy.media.ref_prop",
            "obj": "",
            "line": 545,
            "column": 0,
            "path": "vclibpy/media/ref_prop.py",
            "symbol": "line-too-long",
            "message": "Line too long (110/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "vclibpy.media.ref_prop",
            "obj": "",
            "line": 549,
            "column": 0,
            "path": "vclibpy/media/ref_prop.py",
            "symbol": "line-too-long",
            "message": "Line too long (111/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "vclibpy.media.ref_prop",
            "obj": "",
            "line": 552,
            "column": 0,
            "path": "vclibpy/media/ref_prop.py",
            "symbol": "line-too-long",
            "message": "Line too long (113/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "vclibpy.media.ref_prop",
            "obj": "",
            "line": 591,
            "column": 0,
            "path": "vclibpy/media/ref_prop.py",
            "symbol": "line-too-long",
            "message": "Line too long (118/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "vclibpy.media.ref_prop",
            "obj": "",
            "line": 597,
            "column": 0,
            "path": "vclibpy/media/ref_prop.py",
            "symbol": "line-too-long",
            "message": "Line too long (112/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "vclibpy.media.ref_prop",
            "obj": "",
            "line": 675,
            "column": 0,
            "path": "vclibpy/media/ref_prop.py",
            "symbol": "line-too-long",
            "message": "Line too long (105/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "vclibpy.media.ref_prop",
            "obj": "",
            "line": 716,
            "column": 0,
            "path": "vclibpy/media/ref_prop.py",
            "symbol": "line-too-long",
            "message": "Line too long (105/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "vclibpy.media.ref_prop",
            "obj": "",
            "line": 824,
            "column": 0,
            "path": "vclibpy/media/ref_prop.py",
            "symbol": "line-too-long",
            "message": "Line too long (118/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "vclibpy.media.ref_prop",
            "obj": "",
            "line": 848,
            "column": 0,
            "path": "vclibpy/media/ref_prop.py",
            "symbol": "line-too-long",
            "message": "Line too long (117/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "vclibpy.media.ref_prop",
            "obj": "",
            "line": 895,
            "column": 0,
            "path": "vclibpy/media/ref_prop.py",
            "symbol": "line-too-long",
            "message": "Line too long (120/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "vclibpy.media.ref_prop",
            "obj": "",
            "line": 927,
            "column": 0,
            "path": "vclibpy/media/ref_prop.py",
            "symbol": "line-too-long",
            "message": "Line too long (105/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "vclibpy.media.ref_prop",
            "obj": "",
            "line": 999,
            "column": 0,
            "path": "vclibpy/media/ref_prop.py",
            "symbol": "line-too-long",
            "message": "Line too long (114/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "vclibpy.media.ref_prop",
            "obj": "",
            "line": 1061,
            "column": 0,
            "path": "vclibpy/media/ref_prop.py",
            "symbol": "line-too-long",
            "message": "Line too long (114/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "vclibpy.media.ref_prop",
            "obj": "",
            "line": 1071,
            "column": 0,
            "path": "vclibpy/media/ref_prop.py",
            "symbol": "line-too-long",
            "message": "Line too long (107/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "vclibpy.media.ref_prop",
            "obj": "",
            "line": 1098,
            "column": 0,
            "path": "vclibpy/media/ref_prop.py",
            "symbol": "line-too-long",
            "message": "Line too long (107/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "vclibpy.media.ref_prop",
            "obj": "",
            "line": 1165,
            "column": 0,
            "path": "vclibpy/media/ref_prop.py",
            "symbol": "line-too-long",
            "message": "Line too long (108/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "vclibpy.media.ref_prop",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "vclibpy/media/ref_prop.py",
            "symbol": "too-many-lines",
            "message": "Too many lines in module (1231/1000)",
            "message-id": "C0302"
        },
        {
            "type": "warning",
            "module": "vclibpy.media.ref_prop",
            "obj": "",
            "line": 250,
            "column": 9,
            "path": "vclibpy/media/ref_prop.py",
            "symbol": "fixme",
            "message": "TODO",
            "message-id": "W0511"
        },
        {
            "type": "warning",
            "module": "vclibpy.media.ref_prop",
            "obj": "",
            "line": 358,
            "column": 42,
            "path": "vclibpy/media/ref_prop.py",
            "symbol": "fixme",
            "message": "TODO: in general not necessary, decreases performance",
            "message-id": "W0511"
        },
        {
            "type": "warning",
            "module": "vclibpy.media.ref_prop",
            "obj": "",
            "line": 528,
            "column": 17,
            "path": "vclibpy/media/ref_prop.py",
            "symbol": "fixme",
            "message": "TODO: Ending is not necessary to create mixtures....",
            "message-id": "W0511"
        },
        {
            "type": "convention",
            "module": "vclibpy.media.ref_prop",
            "obj": "RefProp.__init__",
            "line": 180,
            "column": 8,
            "path": "vclibpy/media/ref_prop.py",
            "symbol": "invalid-name",
            "message": "Attribute name \"rp\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "refactor",
            "module": "vclibpy.media.ref_prop",
            "obj": "RefProp",
            "line": 27,
            "column": 0,
            "path": "vclibpy/media/ref_prop.py",
            "symbol": "too-many-instance-attributes",
            "message": "Too many instance attributes (15/7)",
            "message-id": "R0902"
        },
        {
            "type": "refactor",
            "module": "vclibpy.media.ref_prop",
            "obj": "RefProp.__init__",
            "line": 139,
            "column": 4,
            "path": "vclibpy/media/ref_prop.py",
            "symbol": "too-many-arguments",
            "message": "Too many arguments (9/5)",
            "message-id": "R0913"
        },
        {
            "type": "convention",
            "module": "vclibpy.media.ref_prop",
            "obj": "RefProp._delete_dll",
            "line": 210,
            "column": 12,
            "path": "vclibpy/media/ref_prop.py",
            "symbol": "import-outside-toplevel",
            "message": "Import outside toplevel (_ctypes)",
            "message-id": "C0415"
        },
        {
            "type": "convention",
            "module": "vclibpy.media.ref_prop",
            "obj": "RefProp._delete_dll",
            "line": 211,
            "column": 12,
            "path": "vclibpy/media/ref_prop.py",
            "symbol": "import-outside-toplevel",
            "message": "Import outside toplevel (sys)",
            "message-id": "C0415"
        },
        {
            "type": "warning",
            "module": "vclibpy.media.ref_prop",
            "obj": "RefProp._delete_dll",
            "line": 212,
            "column": 22,
            "path": "vclibpy/media/ref_prop.py",
            "symbol": "protected-access",
            "message": "Access to a protected member _handle of a client class",
            "message-id": "W0212"
        },
        {
            "type": "error",
            "module": "vclibpy.media.ref_prop",
            "obj": "RefProp._delete_dll",
            "line": 214,
            "column": 16,
            "path": "vclibpy/media/ref_prop.py",
            "symbol": "no-member",
            "message": "Module '_ctypes' has no 'FreeLibrary' member",
            "message-id": "E1101"
        },
        {
            "type": "convention",
            "module": "vclibpy.media.ref_prop",
            "obj": "RefProp._call_refprop_allprop",
            "line": 257,
            "column": 30,
            "path": "vclibpy/media/ref_prop.py",
            "symbol": "invalid-name",
            "message": "Argument name \"T_val\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "refactor",
            "module": "vclibpy.media.ref_prop",
            "obj": "RefProp._call_refprop_allprop",
            "line": 255,
            "column": 4,
            "path": "vclibpy/media/ref_prop.py",
            "symbol": "too-many-arguments",
            "message": "Too many arguments (6/5)",
            "message-id": "R0913"
        },
        {
            "type": "convention",
            "module": "vclibpy.media.ref_prop",
            "obj": "RefProp._call_refprop_allprop",
            "line": 303,
            "column": 29,
            "path": "vclibpy/media/ref_prop.py",
            "symbol": "consider-using-f-string",
            "message": "Formatting a regular string which could be a f-string",
            "message-id": "C0209"
        },
        {
            "type": "refactor",
            "module": "vclibpy.media.ref_prop",
            "obj": "RefProp._call_refprop",
            "line": 310,
            "column": 4,
            "path": "vclibpy/media/ref_prop.py",
            "symbol": "too-many-arguments",
            "message": "Too many arguments (9/5)",
            "message-id": "R0913"
        },
        {
            "type": "convention",
            "module": "vclibpy.media.ref_prop",
            "obj": "RefProp._call_refprop",
            "line": 370,
            "column": 37,
            "path": "vclibpy/media/ref_prop.py",
            "symbol": "consider-using-f-string",
            "message": "Formatting a regular string which could be a f-string",
            "message-id": "C0209"
        },
        {
            "type": "convention",
            "module": "vclibpy.media.ref_prop",
            "obj": "RefProp._check_error",
            "line": 406,
            "column": 34,
            "path": "vclibpy/media/ref_prop.py",
            "symbol": "consider-using-f-string",
            "message": "Formatting a regular string which could be a f-string",
            "message-id": "C0209"
        },
        {
            "type": "convention",
            "module": "vclibpy.media.ref_prop",
            "obj": "RefProp._check_error",
            "line": 411,
            "column": 36,
            "path": "vclibpy/media/ref_prop.py",
            "symbol": "consider-using-f-string",
            "message": "Formatting a regular string which could be a f-string",
            "message-id": "C0209"
        },
        {
            "type": "refactor",
            "module": "vclibpy.media.ref_prop",
            "obj": "RefProp._get_comp_names",
            "line": 444,
            "column": 16,
            "path": "vclibpy/media/ref_prop.py",
            "symbol": "no-else-continue",
            "message": "Unnecessary \"else\" after \"continue\", remove the \"else\" and de-indent the code inside it",
            "message-id": "R1724"
        },
        {
            "type": "refactor",
            "module": "vclibpy.media.ref_prop",
            "obj": "RefProp._get_comp_names",
            "line": 414,
            "column": 4,
            "path": "vclibpy/media/ref_prop.py",
            "symbol": "too-many-branches",
            "message": "Too many branches (13/12)",
            "message-id": "R0912"
        },
        {
            "type": "convention",
            "module": "vclibpy.media.ref_prop",
            "obj": "RefProp._get_comp_frac",
            "line": 456,
            "column": 29,
            "path": "vclibpy/media/ref_prop.py",
            "symbol": "invalid-name",
            "message": "Argument name \"z\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.media.ref_prop",
            "obj": "RefProp._get_comp_frac",
            "line": 496,
            "column": 37,
            "path": "vclibpy/media/ref_prop.py",
            "symbol": "consider-using-f-string",
            "message": "Formatting a regular string which could be a f-string",
            "message-id": "C0209"
        },
        {
            "type": "refactor",
            "module": "vclibpy.media.ref_prop",
            "obj": "RefProp._setup_rp",
            "line": 540,
            "column": 16,
            "path": "vclibpy/media/ref_prop.py",
            "symbol": "no-else-raise",
            "message": "Unnecessary \"else\" after \"raise\", remove the \"else\" and de-indent the code inside it",
            "message-id": "R1720"
        },
        {
            "type": "convention",
            "module": "vclibpy.media.ref_prop",
            "obj": "RefProp._setup_rp",
            "line": 542,
            "column": 24,
            "path": "vclibpy/media/ref_prop.py",
            "symbol": "consider-using-f-string",
            "message": "Formatting a regular string which could be a f-string",
            "message-id": "C0209"
        },
        {
            "type": "convention",
            "module": "vclibpy.media.ref_prop",
            "obj": "RefProp._setup_rp",
            "line": 545,
            "column": 24,
            "path": "vclibpy/media/ref_prop.py",
            "symbol": "consider-using-f-string",
            "message": "Formatting a regular string which could be a f-string",
            "message-id": "C0209"
        },
        {
            "type": "convention",
            "module": "vclibpy.media.ref_prop",
            "obj": "RefProp._setup_rp",
            "line": 549,
            "column": 24,
            "path": "vclibpy/media/ref_prop.py",
            "symbol": "consider-using-f-string",
            "message": "Formatting a regular string which could be a f-string",
            "message-id": "C0209"
        },
        {
            "type": "convention",
            "module": "vclibpy.media.ref_prop",
            "obj": "RefProp._setup_rp",
            "line": 552,
            "column": 24,
            "path": "vclibpy/media/ref_prop.py",
            "symbol": "consider-using-f-string",
            "message": "Formatting a regular string which could be a f-string",
            "message-id": "C0209"
        },
        {
            "type": "warning",
            "module": "vclibpy.media.ref_prop",
            "obj": "RefProp._setup_rp",
            "line": 533,
            "column": 12,
            "path": "vclibpy/media/ref_prop.py",
            "symbol": "unused-variable",
            "message": "Unused variable 'setref'",
            "message-id": "W0612"
        },
        {
            "type": "refactor",
            "module": "vclibpy.media.ref_prop",
            "obj": "RefProp.calc_state",
            "line": 590,
            "column": 4,
            "path": "vclibpy/media/ref_prop.py",
            "symbol": "too-many-locals",
            "message": "Too many local variables (19/15)",
            "message-id": "R0914"
        },
        {
            "type": "refactor",
            "module": "vclibpy.media.ref_prop",
            "obj": "RefProp.calc_state",
            "line": 590,
            "column": 4,
            "path": "vclibpy/media/ref_prop.py",
            "symbol": "too-many-branches",
            "message": "Too many branches (29/12)",
            "message-id": "R0912"
        },
        {
            "type": "refactor",
            "module": "vclibpy.media.ref_prop",
            "obj": "RefProp.calc_state",
            "line": 590,
            "column": 4,
            "path": "vclibpy/media/ref_prop.py",
            "symbol": "too-many-statements",
            "message": "Too many statements (123/50)",
            "message-id": "R0915"
        },
        {
            "type": "convention",
            "module": "vclibpy.media.ref_prop",
            "obj": "RefProp.get_available_substances",
            "line": 873,
            "column": 29,
            "path": "vclibpy/media/ref_prop.py",
            "symbol": "consider-using-f-string",
            "message": "Formatting a regular string which could be a f-string",
            "message-id": "C0209"
        },
        {
            "type": "warning",
            "module": "vclibpy.media.ref_prop",
            "obj": "RefProp.get_available_substances",
            "line": 890,
            "column": 17,
            "path": "vclibpy/media/ref_prop.py",
            "symbol": "unspecified-encoding",
            "message": "Using open without explicitly specifying an encoding",
            "message-id": "W1514"
        },
        {
            "type": "convention",
            "module": "vclibpy.media.ref_prop",
            "obj": "RefProp.get_available_substances",
            "line": 892,
            "column": 33,
            "path": "vclibpy/media/ref_prop.py",
            "symbol": "consider-using-f-string",
            "message": "Formatting a regular string which could be a f-string",
            "message-id": "C0209"
        },
        {
            "type": "convention",
            "module": "vclibpy.media.ref_prop",
            "obj": "RefProp.get_available_substances",
            "line": 895,
            "column": 29,
            "path": "vclibpy/media/ref_prop.py",
            "symbol": "consider-using-f-string",
            "message": "Formatting a regular string which could be a f-string",
            "message-id": "C0209"
        },
        {
            "type": "convention",
            "module": "vclibpy.media.ref_prop",
            "obj": "RefProp.get_molar_composition",
            "line": 937,
            "column": 12,
            "path": "vclibpy/media/ref_prop.py",
            "symbol": "invalid-name",
            "message": "Variable name \"z\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.media.ref_prop",
            "obj": "RefProp.get_molar_composition",
            "line": 940,
            "column": 12,
            "path": "vclibpy/media/ref_prop.py",
            "symbol": "invalid-name",
            "message": "Variable name \"z\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.media.ref_prop",
            "obj": "RefProp.get_critical_point",
            "line": 983,
            "column": 12,
            "path": "vclibpy/media/ref_prop.py",
            "symbol": "invalid-name",
            "message": "Variable name \"pc\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.media.ref_prop",
            "obj": "RefProp.get_critical_point",
            "line": 984,
            "column": 12,
            "path": "vclibpy/media/ref_prop.py",
            "symbol": "invalid-name",
            "message": "Variable name \"dc\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.media.ref_prop",
            "obj": "RefProp.get_critical_point",
            "line": 988,
            "column": 12,
            "path": "vclibpy/media/ref_prop.py",
            "symbol": "invalid-name",
            "message": "Variable name \"pc\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.media.ref_prop",
            "obj": "RefProp.get_critical_point",
            "line": 989,
            "column": 12,
            "path": "vclibpy/media/ref_prop.py",
            "symbol": "invalid-name",
            "message": "Variable name \"dc\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "refactor",
            "module": "vclibpy.media.ref_prop",
            "obj": "RefProp.get_gwp",
            "line": 1051,
            "column": 8,
            "path": "vclibpy/media/ref_prop.py",
            "symbol": "consider-using-max-builtin",
            "message": "Consider using 'gwp = max(gwp, 0)' instead of unnecessary if block",
            "message-id": "R1731"
        },
        {
            "type": "warning",
            "module": "vclibpy.media.ref_prop",
            "obj": "RefProp.get_odp",
            "line": 1124,
            "column": 14,
            "path": "vclibpy/media/ref_prop.py",
            "symbol": "nested-min-max",
            "message": "Do not use nested call of 'max'; it's possible to do 'max(tmp.Output, 0)' instead",
            "message-id": "W3301"
        },
        {
            "type": "refactor",
            "module": "vclibpy.media.ref_prop",
            "obj": "RefProp.get_odp",
            "line": 1126,
            "column": 8,
            "path": "vclibpy/media/ref_prop.py",
            "symbol": "consider-using-max-builtin",
            "message": "Consider using 'odp = max(odp, 0)' instead of unnecessary if block",
            "message-id": "R1731"
        },
        {
            "type": "convention",
            "module": "vclibpy.media.ref_prop",
            "obj": "RefProp.get_sat_vap_pressure",
            "line": 1147,
            "column": 35,
            "path": "vclibpy/media/ref_prop.py",
            "symbol": "invalid-name",
            "message": "Argument name \"T_sat\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "refactor",
            "module": "vclibpy.media.ref_prop",
            "obj": "RefProp",
            "line": 27,
            "column": 0,
            "path": "vclibpy/media/ref_prop.py",
            "symbol": "too-many-public-methods",
            "message": "Too many public methods (25/20)",
            "message-id": "R0904"
        },
        {
            "type": "info",
            "module": "vclibpy.media.cool_prop",
            "obj": "CoolProp",
            "line": 27,
            "column": 15,
            "path": "vclibpy/media/cool_prop.py",
            "symbol": "c-extension-no-member",
            "message": "Module 'CoolProp.CoolProp' has no 'PT_INPUTS' member, but source is unavailable. Consider adding this module to extension-pkg-allow-list if you want to perform analysis based on run-time introspection of living objects.",
            "message-id": "I1101"
        },
        {
            "type": "info",
            "module": "vclibpy.media.cool_prop",
            "obj": "CoolProp",
            "line": 28,
            "column": 15,
            "path": "vclibpy/media/cool_prop.py",
            "symbol": "c-extension-no-member",
            "message": "Module 'CoolProp.CoolProp' has no 'QT_INPUTS' member, but source is unavailable. Consider adding this module to extension-pkg-allow-list if you want to perform analysis based on run-time introspection of living objects.",
            "message-id": "I1101"
        },
        {
            "type": "info",
            "module": "vclibpy.media.cool_prop",
            "obj": "CoolProp",
            "line": 29,
            "column": 15,
            "path": "vclibpy/media/cool_prop.py",
            "symbol": "c-extension-no-member",
            "message": "Module 'CoolProp.CoolProp' has no 'PSmass_INPUTS' member, but source is unavailable. Consider adding this module to extension-pkg-allow-list if you want to perform analysis based on run-time introspection of living objects.",
            "message-id": "I1101"
        },
        {
            "type": "info",
            "module": "vclibpy.media.cool_prop",
            "obj": "CoolProp",
            "line": 30,
            "column": 15,
            "path": "vclibpy/media/cool_prop.py",
            "symbol": "c-extension-no-member",
            "message": "Module 'CoolProp.CoolProp' has no 'HmassP_INPUTS' member, but source is unavailable. Consider adding this module to extension-pkg-allow-list if you want to perform analysis based on run-time introspection of living objects.",
            "message-id": "I1101"
        },
        {
            "type": "info",
            "module": "vclibpy.media.cool_prop",
            "obj": "CoolProp",
            "line": 31,
            "column": 15,
            "path": "vclibpy/media/cool_prop.py",
            "symbol": "c-extension-no-member",
            "message": "Module 'CoolProp.CoolProp' has no 'PQ_INPUTS' member, but source is unavailable. Consider adding this module to extension-pkg-allow-list if you want to perform analysis based on run-time introspection of living objects.",
            "message-id": "I1101"
        },
        {
            "type": "info",
            "module": "vclibpy.media.cool_prop",
            "obj": "CoolProp.__init__",
            "line": 38,
            "column": 44,
            "path": "vclibpy/media/cool_prop.py",
            "symbol": "c-extension-no-member",
            "message": "Module 'CoolProp.CoolProp' has no 'AbstractState' member, but source is unavailable. Consider adding this module to extension-pkg-allow-list if you want to perform analysis based on run-time introspection of living objects.",
            "message-id": "I1101"
        },
        {
            "type": "info",
            "module": "vclibpy.media.cool_prop",
            "obj": "CoolProp.calc_state",
            "line": 48,
            "column": 16,
            "path": "vclibpy/media/cool_prop.py",
            "symbol": "c-extension-no-member",
            "message": "Module 'CoolProp.CoolProp' has no 'PropsSI' member, but source is unavailable. Consider adding this module to extension-pkg-allow-list if you want to perform analysis based on run-time introspection of living objects.",
            "message-id": "I1101"
        },
        {
            "type": "info",
            "module": "vclibpy.media.cool_prop",
            "obj": "CoolProp.calc_state",
            "line": 50,
            "column": 16,
            "path": "vclibpy/media/cool_prop.py",
            "symbol": "c-extension-no-member",
            "message": "Module 'CoolProp.CoolProp' has no 'PropsSI' member, but source is unavailable. Consider adding this module to extension-pkg-allow-list if you want to perform analysis based on run-time introspection of living objects.",
            "message-id": "I1101"
        },
        {
            "type": "info",
            "module": "vclibpy.media.cool_prop",
            "obj": "CoolProp.calc_state",
            "line": 52,
            "column": 16,
            "path": "vclibpy/media/cool_prop.py",
            "symbol": "c-extension-no-member",
            "message": "Module 'CoolProp.CoolProp' has no 'PropsSI' member, but source is unavailable. Consider adding this module to extension-pkg-allow-list if you want to perform analysis based on run-time introspection of living objects.",
            "message-id": "I1101"
        },
        {
            "type": "info",
            "module": "vclibpy.media.cool_prop",
            "obj": "CoolProp.calc_state",
            "line": 54,
            "column": 16,
            "path": "vclibpy/media/cool_prop.py",
            "symbol": "c-extension-no-member",
            "message": "Module 'CoolProp.CoolProp' has no 'PropsSI' member, but source is unavailable. Consider adding this module to extension-pkg-allow-list if you want to perform analysis based on run-time introspection of living objects.",
            "message-id": "I1101"
        },
        {
            "type": "info",
            "module": "vclibpy.media.cool_prop",
            "obj": "CoolProp.calc_state",
            "line": 56,
            "column": 16,
            "path": "vclibpy/media/cool_prop.py",
            "symbol": "c-extension-no-member",
            "message": "Module 'CoolProp.CoolProp' has no 'PropsSI' member, but source is unavailable. Consider adding this module to extension-pkg-allow-list if you want to perform analysis based on run-time introspection of living objects.",
            "message-id": "I1101"
        },
        {
            "type": "info",
            "module": "vclibpy.media.cool_prop",
            "obj": "CoolProp.calc_state",
            "line": 58,
            "column": 16,
            "path": "vclibpy/media/cool_prop.py",
            "symbol": "c-extension-no-member",
            "message": "Module 'CoolProp.CoolProp' has no 'PropsSI' member, but source is unavailable. Consider adding this module to extension-pkg-allow-list if you want to perform analysis based on run-time introspection of living objects.",
            "message-id": "I1101"
        },
        {
            "type": "info",
            "module": "vclibpy.media.cool_prop",
            "obj": "CoolProp.calc_state",
            "line": 60,
            "column": 16,
            "path": "vclibpy/media/cool_prop.py",
            "symbol": "c-extension-no-member",
            "message": "Module 'CoolProp.CoolProp' has no 'PropsSI' member, but source is unavailable. Consider adding this module to extension-pkg-allow-list if you want to perform analysis based on run-time introspection of living objects.",
            "message-id": "I1101"
        },
        {
            "type": "convention",
            "module": "vclibpy.media.cool_prop",
            "obj": "CoolProp.calc_transport_properties",
            "line": 88,
            "column": 12,
            "path": "vclibpy/media/cool_prop.py",
            "symbol": "invalid-name",
            "message": "Variable name \"pr\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "info",
            "module": "vclibpy.media.cool_prop",
            "obj": "CoolProp.calc_transport_properties",
            "line": 88,
            "column": 17,
            "path": "vclibpy/media/cool_prop.py",
            "symbol": "c-extension-no-member",
            "message": "Module 'CoolProp.CoolProp' has no 'PropsSI' member, but source is unavailable. Consider adding this module to extension-pkg-allow-list if you want to perform analysis based on run-time introspection of living objects.",
            "message-id": "I1101"
        },
        {
            "type": "info",
            "module": "vclibpy.media.cool_prop",
            "obj": "CoolProp.calc_transport_properties",
            "line": 90,
            "column": 17,
            "path": "vclibpy/media/cool_prop.py",
            "symbol": "c-extension-no-member",
            "message": "Module 'CoolProp.CoolProp' has no 'PropsSI' member, but source is unavailable. Consider adding this module to extension-pkg-allow-list if you want to perform analysis based on run-time introspection of living objects.",
            "message-id": "I1101"
        },
        {
            "type": "info",
            "module": "vclibpy.media.cool_prop",
            "obj": "CoolProp.calc_transport_properties",
            "line": 92,
            "column": 17,
            "path": "vclibpy/media/cool_prop.py",
            "symbol": "c-extension-no-member",
            "message": "Module 'CoolProp.CoolProp' has no 'PropsSI' member, but source is unavailable. Consider adding this module to extension-pkg-allow-list if you want to perform analysis based on run-time introspection of living objects.",
            "message-id": "I1101"
        },
        {
            "type": "info",
            "module": "vclibpy.media.cool_prop",
            "obj": "CoolProp.calc_transport_properties",
            "line": 94,
            "column": 18,
            "path": "vclibpy/media/cool_prop.py",
            "symbol": "c-extension-no-member",
            "message": "Module 'CoolProp.CoolProp' has no 'PropsSI' member, but source is unavailable. Consider adding this module to extension-pkg-allow-list if you want to perform analysis based on run-time introspection of living objects.",
            "message-id": "I1101"
        },
        {
            "type": "info",
            "module": "vclibpy.media.cool_prop",
            "obj": "CoolProp.calc_transport_properties",
            "line": 96,
            "column": 22,
            "path": "vclibpy/media/cool_prop.py",
            "symbol": "c-extension-no-member",
            "message": "Module 'CoolProp.CoolProp' has no 'PropsSI' member, but source is unavailable. Consider adding this module to extension-pkg-allow-list if you want to perform analysis based on run-time introspection of living objects.",
            "message-id": "I1101"
        },
        {
            "type": "info",
            "module": "vclibpy.media.cool_prop",
            "obj": "CoolProp.get_critical_point",
            "line": 132,
            "column": 13,
            "path": "vclibpy/media/cool_prop.py",
            "symbol": "c-extension-no-member",
            "message": "Module 'CoolProp.CoolProp' has no 'PropsSI' member, but source is unavailable. Consider adding this module to extension-pkg-allow-list if you want to perform analysis based on run-time introspection of living objects.",
            "message-id": "I1101"
        },
        {
            "type": "convention",
            "module": "vclibpy.media.cool_prop",
            "obj": "CoolProp.get_critical_point",
            "line": 133,
            "column": 8,
            "path": "vclibpy/media/cool_prop.py",
            "symbol": "invalid-name",
            "message": "Variable name \"pc\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "info",
            "module": "vclibpy.media.cool_prop",
            "obj": "CoolProp.get_critical_point",
            "line": 133,
            "column": 13,
            "path": "vclibpy/media/cool_prop.py",
            "symbol": "c-extension-no-member",
            "message": "Module 'CoolProp.CoolProp' has no 'PropsSI' member, but source is unavailable. Consider adding this module to extension-pkg-allow-list if you want to perform analysis based on run-time introspection of living objects.",
            "message-id": "I1101"
        },
        {
            "type": "convention",
            "module": "vclibpy.media.cool_prop",
            "obj": "CoolProp.get_critical_point",
            "line": 134,
            "column": 8,
            "path": "vclibpy/media/cool_prop.py",
            "symbol": "invalid-name",
            "message": "Variable name \"dc\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "info",
            "module": "vclibpy.media.cool_prop",
            "obj": "CoolProp.get_critical_point",
            "line": 134,
            "column": 13,
            "path": "vclibpy/media/cool_prop.py",
            "symbol": "c-extension-no-member",
            "message": "Module 'CoolProp.CoolProp' has no 'PropsSI' member, but source is unavailable. Consider adding this module to extension-pkg-allow-list if you want to perform analysis based on run-time introspection of living objects.",
            "message-id": "I1101"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.component",
            "obj": "",
            "line": 11,
            "column": 0,
            "path": "vclibpy/components/component.py",
            "symbol": "line-too-long",
            "message": "Line too long (107/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.component",
            "obj": "",
            "line": 12,
            "column": 0,
            "path": "vclibpy/components/component.py",
            "symbol": "line-too-long",
            "message": "Line too long (101/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.component",
            "obj": "",
            "line": 39,
            "column": 0,
            "path": "vclibpy/components/component.py",
            "symbol": "line-too-long",
            "message": "Line too long (103/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.component",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "vclibpy/components/component.py",
            "symbol": "missing-module-docstring",
            "message": "Missing module docstring",
            "message-id": "C0114"
        },
        {
            "type": "warning",
            "module": "vclibpy.components.component",
            "obj": "BaseComponent.start_secondary_med_prop",
            "line": 43,
            "column": 8,
            "path": "vclibpy/components/component.py",
            "symbol": "unnecessary-pass",
            "message": "Unnecessary pass statement",
            "message-id": "W0107"
        },
        {
            "type": "warning",
            "module": "vclibpy.components.component",
            "obj": "BaseComponent.terminate_secondary_med_prop",
            "line": 55,
            "column": 8,
            "path": "vclibpy/components/component.py",
            "symbol": "unnecessary-pass",
            "message": "Unnecessary pass statement",
            "message-id": "W0107"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.compressors.ten_coefficient",
            "obj": "",
            "line": 25,
            "column": 0,
            "path": "vclibpy/components/compressors/ten_coefficient.py",
            "symbol": "line-too-long",
            "message": "Line too long (105/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.compressors.ten_coefficient",
            "obj": "",
            "line": 40,
            "column": 0,
            "path": "vclibpy/components/compressors/ten_coefficient.py",
            "symbol": "line-too-long",
            "message": "Line too long (105/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.compressors.ten_coefficient",
            "obj": "",
            "line": 52,
            "column": 0,
            "path": "vclibpy/components/compressors/ten_coefficient.py",
            "symbol": "line-too-long",
            "message": "Line too long (106/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.compressors.ten_coefficient",
            "obj": "",
            "line": 110,
            "column": 0,
            "path": "vclibpy/components/compressors/ten_coefficient.py",
            "symbol": "line-too-long",
            "message": "Line too long (119/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.compressors.ten_coefficient",
            "obj": "",
            "line": 134,
            "column": 0,
            "path": "vclibpy/components/compressors/ten_coefficient.py",
            "symbol": "line-too-long",
            "message": "Line too long (105/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.compressors.ten_coefficient",
            "obj": "",
            "line": 140,
            "column": 0,
            "path": "vclibpy/components/compressors/ten_coefficient.py",
            "symbol": "line-too-long",
            "message": "Line too long (112/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.compressors.ten_coefficient",
            "obj": "",
            "line": 141,
            "column": 0,
            "path": "vclibpy/components/compressors/ten_coefficient.py",
            "symbol": "line-too-long",
            "message": "Line too long (117/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.compressors.ten_coefficient",
            "obj": "",
            "line": 143,
            "column": 0,
            "path": "vclibpy/components/compressors/ten_coefficient.py",
            "symbol": "line-too-long",
            "message": "Line too long (117/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.compressors.ten_coefficient",
            "obj": "",
            "line": 153,
            "column": 0,
            "path": "vclibpy/components/compressors/ten_coefficient.py",
            "symbol": "line-too-long",
            "message": "Line too long (101/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.compressors.ten_coefficient",
            "obj": "",
            "line": 154,
            "column": 0,
            "path": "vclibpy/components/compressors/ten_coefficient.py",
            "symbol": "line-too-long",
            "message": "Line too long (107/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.compressors.ten_coefficient",
            "obj": "",
            "line": 158,
            "column": 0,
            "path": "vclibpy/components/compressors/ten_coefficient.py",
            "symbol": "line-too-long",
            "message": "Line too long (106/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.compressors.ten_coefficient",
            "obj": "",
            "line": 168,
            "column": 0,
            "path": "vclibpy/components/compressors/ten_coefficient.py",
            "symbol": "line-too-long",
            "message": "Line too long (107/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.compressors.ten_coefficient",
            "obj": "",
            "line": 204,
            "column": 0,
            "path": "vclibpy/components/compressors/ten_coefficient.py",
            "symbol": "line-too-long",
            "message": "Line too long (110/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.compressors.ten_coefficient",
            "obj": "",
            "line": 235,
            "column": 0,
            "path": "vclibpy/components/compressors/ten_coefficient.py",
            "symbol": "line-too-long",
            "message": "Line too long (113/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.compressors.ten_coefficient",
            "obj": "",
            "line": 279,
            "column": 0,
            "path": "vclibpy/components/compressors/ten_coefficient.py",
            "symbol": "line-too-long",
            "message": "Line too long (110/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.compressors.ten_coefficient",
            "obj": "",
            "line": 311,
            "column": 0,
            "path": "vclibpy/components/compressors/ten_coefficient.py",
            "symbol": "line-too-long",
            "message": "Line too long (106/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.compressors.ten_coefficient",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "vclibpy/components/compressors/ten_coefficient.py",
            "symbol": "missing-module-docstring",
            "message": "Missing module docstring",
            "message-id": "C0114"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.compressors.ten_coefficient",
            "obj": "calc_ten_coefficients",
            "line": 10,
            "column": 26,
            "path": "vclibpy/components/compressors/ten_coefficient.py",
            "symbol": "invalid-name",
            "message": "Argument name \"T_eva\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.compressors.ten_coefficient",
            "obj": "calc_ten_coefficients",
            "line": 10,
            "column": 33,
            "path": "vclibpy/components/compressors/ten_coefficient.py",
            "symbol": "invalid-name",
            "message": "Argument name \"T_con\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.compressors.ten_coefficient",
            "obj": "calc_ten_coefficients",
            "line": 23,
            "column": 4,
            "path": "vclibpy/components/compressors/ten_coefficient.py",
            "symbol": "invalid-name",
            "message": "Variable name \"z\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.compressors.ten_coefficient",
            "obj": "BaseTenCoefficientCompressor.__init__",
            "line": 79,
            "column": 8,
            "path": "vclibpy/components/compressors/ten_coefficient.py",
            "symbol": "invalid-name",
            "message": "Attribute name \"md\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.compressors.ten_coefficient",
            "obj": "BaseTenCoefficientCompressor.get_parameter",
            "line": 93,
            "column": 28,
            "path": "vclibpy/components/compressors/ten_coefficient.py",
            "symbol": "invalid-name",
            "message": "Argument name \"T_eva\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.compressors.ten_coefficient",
            "obj": "BaseTenCoefficientCompressor.get_parameter",
            "line": 93,
            "column": 35,
            "path": "vclibpy/components/compressors/ten_coefficient.py",
            "symbol": "invalid-name",
            "message": "Argument name \"T_con\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.compressors.ten_coefficient",
            "obj": "TenCoefficientCompressor.__init__",
            "line": 170,
            "column": 8,
            "path": "vclibpy/components/compressors/ten_coefficient.py",
            "symbol": "invalid-name",
            "message": "Attribute name \"T_sc\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.compressors.ten_coefficient",
            "obj": "TenCoefficientCompressor.__init__",
            "line": 171,
            "column": 8,
            "path": "vclibpy/components/compressors/ten_coefficient.py",
            "symbol": "invalid-name",
            "message": "Attribute name \"T_sh\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "refactor",
            "module": "vclibpy.components.compressors.ten_coefficient",
            "obj": "TenCoefficientCompressor",
            "line": 123,
            "column": 0,
            "path": "vclibpy/components/compressors/ten_coefficient.py",
            "symbol": "too-many-instance-attributes",
            "message": "Too many instance attributes (8/7)",
            "message-id": "R0902"
        },
        {
            "type": "refactor",
            "module": "vclibpy.components.compressors.ten_coefficient",
            "obj": "TenCoefficientCompressor.__init__",
            "line": 168,
            "column": 4,
            "path": "vclibpy/components/compressors/ten_coefficient.py",
            "symbol": "too-many-arguments",
            "message": "Too many arguments (8/5)",
            "message-id": "R0913"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.compressors.ten_coefficient",
            "obj": "TenCoefficientCompressor.get_lambda_h",
            "line": 191,
            "column": 8,
            "path": "vclibpy/components/compressors/ten_coefficient.py",
            "symbol": "invalid-name",
            "message": "Variable name \"T_eva\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.compressors.ten_coefficient",
            "obj": "TenCoefficientCompressor.get_lambda_h",
            "line": 192,
            "column": 8,
            "path": "vclibpy/components/compressors/ten_coefficient.py",
            "symbol": "invalid-name",
            "message": "Variable name \"T_con\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.compressors.ten_coefficient",
            "obj": "TenCoefficientCompressor.get_eta_isentropic",
            "line": 222,
            "column": 8,
            "path": "vclibpy/components/compressors/ten_coefficient.py",
            "symbol": "invalid-name",
            "message": "Variable name \"T_con\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.compressors.ten_coefficient",
            "obj": "TenCoefficientCompressor.get_eta_isentropic",
            "line": 226,
            "column": 8,
            "path": "vclibpy/components/compressors/ten_coefficient.py",
            "symbol": "invalid-name",
            "message": "Variable name \"h3\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.compressors.ten_coefficient",
            "obj": "TenCoefficientCompressor.get_eta_isentropic",
            "line": 230,
            "column": 12,
            "path": "vclibpy/components/compressors/ten_coefficient.py",
            "symbol": "invalid-name",
            "message": "Variable name \"h2\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.compressors.ten_coefficient",
            "obj": "TenCoefficientCompressor.get_eta_isentropic",
            "line": 232,
            "column": 12,
            "path": "vclibpy/components/compressors/ten_coefficient.py",
            "symbol": "invalid-name",
            "message": "Variable name \"h2\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.compressors.ten_coefficient",
            "obj": "TenCoefficientCompressor.get_eta_mech",
            "line": 255,
            "column": 8,
            "path": "vclibpy/components/compressors/ten_coefficient.py",
            "symbol": "invalid-name",
            "message": "Variable name \"T_con\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.compressors.ten_coefficient",
            "obj": "TenCoefficientCompressor.get_eta_mech",
            "line": 259,
            "column": 8,
            "path": "vclibpy/components/compressors/ten_coefficient.py",
            "symbol": "invalid-name",
            "message": "Variable name \"h3\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.compressors.ten_coefficient",
            "obj": "TenCoefficientCompressor.get_eta_mech",
            "line": 260,
            "column": 8,
            "path": "vclibpy/components/compressors/ten_coefficient.py",
            "symbol": "invalid-name",
            "message": "Variable name \"h2\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.compressors.ten_coefficient",
            "obj": "TenCoefficientCompressor._calculate_values",
            "line": 276,
            "column": 8,
            "path": "vclibpy/components/compressors/ten_coefficient.py",
            "symbol": "invalid-name",
            "message": "Variable name \"T_eva\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.compressors.ten_coefficient",
            "obj": "TenCoefficientCompressor._calculate_values",
            "line": 277,
            "column": 8,
            "path": "vclibpy/components/compressors/ten_coefficient.py",
            "symbol": "invalid-name",
            "message": "Variable name \"T_con\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.compressors.ten_coefficient",
            "obj": "DataSheetCompressor.get_lambda_h",
            "line": 335,
            "column": 8,
            "path": "vclibpy/components/compressors/ten_coefficient.py",
            "symbol": "invalid-name",
            "message": "Variable name \"T_eva\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.compressors.ten_coefficient",
            "obj": "DataSheetCompressor.get_lambda_h",
            "line": 336,
            "column": 8,
            "path": "vclibpy/components/compressors/ten_coefficient.py",
            "symbol": "invalid-name",
            "message": "Variable name \"T_con\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.compressors.ten_coefficient",
            "obj": "DataSheetCompressor.get_eta_isentropic",
            "line": 350,
            "column": 8,
            "path": "vclibpy/components/compressors/ten_coefficient.py",
            "symbol": "invalid-name",
            "message": "Variable name \"T_eva\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.compressors.ten_coefficient",
            "obj": "DataSheetCompressor.get_eta_isentropic",
            "line": 351,
            "column": 8,
            "path": "vclibpy/components/compressors/ten_coefficient.py",
            "symbol": "invalid-name",
            "message": "Variable name \"T_con\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.compressors.ten_coefficient",
            "obj": "DataSheetCompressor.get_eta_mech",
            "line": 365,
            "column": 8,
            "path": "vclibpy/components/compressors/ten_coefficient.py",
            "symbol": "invalid-name",
            "message": "Variable name \"T_eva\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.compressors.ten_coefficient",
            "obj": "DataSheetCompressor.get_eta_mech",
            "line": 366,
            "column": 8,
            "path": "vclibpy/components/compressors/ten_coefficient.py",
            "symbol": "invalid-name",
            "message": "Variable name \"T_con\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.compressors.compressor",
            "obj": "",
            "line": 40,
            "column": 0,
            "path": "vclibpy/components/compressors/compressor.py",
            "symbol": "line-too-long",
            "message": "Line too long (107/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.compressors.compressor",
            "obj": "",
            "line": 152,
            "column": 0,
            "path": "vclibpy/components/compressors/compressor.py",
            "symbol": "line-too-long",
            "message": "Line too long (114/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.compressors.compressor",
            "obj": "",
            "line": 153,
            "column": 0,
            "path": "vclibpy/components/compressors/compressor.py",
            "symbol": "line-too-long",
            "message": "Line too long (113/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.compressors.compressor",
            "obj": "",
            "line": 158,
            "column": 0,
            "path": "vclibpy/components/compressors/compressor.py",
            "symbol": "line-too-long",
            "message": "Line too long (103/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.compressors.compressor",
            "obj": "Compressor.__init__",
            "line": 52,
            "column": 8,
            "path": "vclibpy/components/compressors/compressor.py",
            "symbol": "invalid-name",
            "message": "Attribute name \"N_max\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.compressors.compressor",
            "obj": "Compressor.__init__",
            "line": 53,
            "column": 8,
            "path": "vclibpy/components/compressors/compressor.py",
            "symbol": "invalid-name",
            "message": "Attribute name \"V_h\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.compressors.compressor",
            "obj": "Compressor.calc_m_flow",
            "line": 145,
            "column": 8,
            "path": "vclibpy/components/compressors/compressor.py",
            "symbol": "invalid-name",
            "message": "Variable name \"V_flow_ref\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.compressors.compressor",
            "obj": "Compressor.calc_electrical_power",
            "line": 168,
            "column": 8,
            "path": "vclibpy/components/compressors/compressor.py",
            "symbol": "invalid-name",
            "message": "Variable name \"P_t\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.compressors.compressor",
            "obj": "Compressor.calc_electrical_power",
            "line": 171,
            "column": 8,
            "path": "vclibpy/components/compressors/compressor.py",
            "symbol": "invalid-name",
            "message": "Variable name \"P_el\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.compressors.rotary",
            "obj": "",
            "line": 9,
            "column": 0,
            "path": "vclibpy/components/compressors/rotary.py",
            "symbol": "line-too-long",
            "message": "Line too long (110/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.compressors.rotary",
            "obj": "",
            "line": 39,
            "column": 0,
            "path": "vclibpy/components/compressors/rotary.py",
            "symbol": "line-too-long",
            "message": "Line too long (107/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.compressors.rotary",
            "obj": "",
            "line": 77,
            "column": 0,
            "path": "vclibpy/components/compressors/rotary.py",
            "symbol": "line-too-long",
            "message": "Line too long (107/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.compressors.rotary",
            "obj": "",
            "line": 107,
            "column": 0,
            "path": "vclibpy/components/compressors/rotary.py",
            "symbol": "line-too-long",
            "message": "Line too long (107/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.compressors.rotary",
            "obj": "",
            "line": 124,
            "column": 0,
            "path": "vclibpy/components/compressors/rotary.py",
            "symbol": "line-too-long",
            "message": "Line too long (116/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.compressors.rotary",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "vclibpy/components/compressors/rotary.py",
            "symbol": "missing-module-docstring",
            "message": "Missing module docstring",
            "message-id": "C0114"
        },
        {
            "type": "refactor",
            "module": "vclibpy.components.compressors.rotary",
            "obj": "RotaryCompressor.get_lambda_h",
            "line": 28,
            "column": 4,
            "path": "vclibpy/components/compressors/rotary.py",
            "symbol": "too-many-locals",
            "message": "Too many local variables (18/15)",
            "message-id": "R0914"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.compressors.rotary",
            "obj": "RotaryCompressor.get_lambda_h",
            "line": 41,
            "column": 8,
            "path": "vclibpy/components/compressors/rotary.py",
            "symbol": "invalid-name",
            "message": "Variable name \"T_1\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.compressors.rotary",
            "obj": "RotaryCompressor.get_lambda_h",
            "line": 48,
            "column": 8,
            "path": "vclibpy/components/compressors/rotary.py",
            "symbol": "invalid-name",
            "message": "Variable name \"sigma_T_1\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.compressors.rotary",
            "obj": "RotaryCompressor.get_lambda_h",
            "line": 49,
            "column": 8,
            "path": "vclibpy/components/compressors/rotary.py",
            "symbol": "invalid-name",
            "message": "Variable name \"T_1_ave\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.compressors.rotary",
            "obj": "RotaryCompressor.get_lambda_h",
            "line": 56,
            "column": 8,
            "path": "vclibpy/components/compressors/rotary.py",
            "symbol": "invalid-name",
            "message": "Variable name \"pi\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.compressors.rotary",
            "obj": "RotaryCompressor.get_eta_isentropic",
            "line": 84,
            "column": 8,
            "path": "vclibpy/components/compressors/rotary.py",
            "symbol": "invalid-name",
            "message": "Variable name \"pi\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "refactor",
            "module": "vclibpy.components.compressors.rotary",
            "obj": "RotaryCompressor.get_eta_mech",
            "line": 95,
            "column": 4,
            "path": "vclibpy/components/compressors/rotary.py",
            "symbol": "too-many-locals",
            "message": "Too many local variables (17/15)",
            "message-id": "R0914"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.compressors.rotary",
            "obj": "RotaryCompressor.get_eta_mech",
            "line": 120,
            "column": 8,
            "path": "vclibpy/components/compressors/rotary.py",
            "symbol": "invalid-name",
            "message": "Variable name \"pi\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.compressors",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "vclibpy/components/compressors/__init__.py",
            "symbol": "missing-module-docstring",
            "message": "Missing module docstring",
            "message-id": "C0114"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.compressors.constant_effectivness",
            "obj": "",
            "line": 9,
            "column": 0,
            "path": "vclibpy/components/compressors/constant_effectivness.py",
            "symbol": "line-too-long",
            "message": "Line too long (114/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.compressors.constant_effectivness",
            "obj": "",
            "line": 25,
            "column": 0,
            "path": "vclibpy/components/compressors/constant_effectivness.py",
            "symbol": "line-too-long",
            "message": "Line too long (117/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.compressors.constant_effectivness",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "vclibpy/components/compressors/constant_effectivness.py",
            "symbol": "missing-module-docstring",
            "message": "Missing module docstring",
            "message-id": "C0114"
        },
        {
            "type": "refactor",
            "module": "vclibpy.components.compressors.constant_effectivness",
            "obj": "ConstantEffectivenessCompressor.__init__",
            "line": 40,
            "column": 4,
            "path": "vclibpy/components/compressors/constant_effectivness.py",
            "symbol": "too-many-arguments",
            "message": "Too many arguments (6/5)",
            "message-id": "R0913"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.heat_exchangers",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "vclibpy/components/heat_exchangers/__init__.py",
            "symbol": "missing-module-docstring",
            "message": "Missing module docstring",
            "message-id": "C0114"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.heat_exchangers.moving_boundary_ntu",
            "obj": "",
            "line": 19,
            "column": 0,
            "path": "vclibpy/components/heat_exchangers/moving_boundary_ntu.py",
            "symbol": "line-too-long",
            "message": "Line too long (102/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.heat_exchangers.moving_boundary_ntu",
            "obj": "",
            "line": 159,
            "column": 0,
            "path": "vclibpy/components/heat_exchangers/moving_boundary_ntu.py",
            "symbol": "line-too-long",
            "message": "Line too long (104/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.heat_exchangers.moving_boundary_ntu",
            "obj": "",
            "line": 161,
            "column": 0,
            "path": "vclibpy/components/heat_exchangers/moving_boundary_ntu.py",
            "symbol": "line-too-long",
            "message": "Line too long (104/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.heat_exchangers.moving_boundary_ntu",
            "obj": "",
            "line": 199,
            "column": 0,
            "path": "vclibpy/components/heat_exchangers/moving_boundary_ntu.py",
            "symbol": "line-too-long",
            "message": "Line too long (101/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.heat_exchangers.moving_boundary_ntu",
            "obj": "",
            "line": 204,
            "column": 0,
            "path": "vclibpy/components/heat_exchangers/moving_boundary_ntu.py",
            "symbol": "line-too-long",
            "message": "Line too long (102/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.heat_exchangers.moving_boundary_ntu",
            "obj": "",
            "line": 206,
            "column": 0,
            "path": "vclibpy/components/heat_exchangers/moving_boundary_ntu.py",
            "symbol": "line-too-long",
            "message": "Line too long (103/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.heat_exchangers.moving_boundary_ntu",
            "obj": "",
            "line": 225,
            "column": 0,
            "path": "vclibpy/components/heat_exchangers/moving_boundary_ntu.py",
            "symbol": "line-too-long",
            "message": "Line too long (121/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.heat_exchangers.moving_boundary_ntu",
            "obj": "",
            "line": 226,
            "column": 0,
            "path": "vclibpy/components/heat_exchangers/moving_boundary_ntu.py",
            "symbol": "line-too-long",
            "message": "Line too long (120/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.heat_exchangers.moving_boundary_ntu",
            "obj": "",
            "line": 227,
            "column": 0,
            "path": "vclibpy/components/heat_exchangers/moving_boundary_ntu.py",
            "symbol": "line-too-long",
            "message": "Line too long (122/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.heat_exchangers.moving_boundary_ntu",
            "obj": "",
            "line": 289,
            "column": 0,
            "path": "vclibpy/components/heat_exchangers/moving_boundary_ntu.py",
            "symbol": "line-too-long",
            "message": "Line too long (104/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.heat_exchangers.moving_boundary_ntu",
            "obj": "",
            "line": 291,
            "column": 0,
            "path": "vclibpy/components/heat_exchangers/moving_boundary_ntu.py",
            "symbol": "line-too-long",
            "message": "Line too long (104/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.heat_exchangers.moving_boundary_ntu",
            "obj": "",
            "line": 339,
            "column": 0,
            "path": "vclibpy/components/heat_exchangers/moving_boundary_ntu.py",
            "symbol": "line-too-long",
            "message": "Line too long (101/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.heat_exchangers.moving_boundary_ntu",
            "obj": "",
            "line": 344,
            "column": 0,
            "path": "vclibpy/components/heat_exchangers/moving_boundary_ntu.py",
            "symbol": "line-too-long",
            "message": "Line too long (102/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.heat_exchangers.moving_boundary_ntu",
            "obj": "",
            "line": 346,
            "column": 0,
            "path": "vclibpy/components/heat_exchangers/moving_boundary_ntu.py",
            "symbol": "line-too-long",
            "message": "Line too long (103/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.heat_exchangers.moving_boundary_ntu",
            "obj": "",
            "line": 363,
            "column": 0,
            "path": "vclibpy/components/heat_exchangers/moving_boundary_ntu.py",
            "symbol": "line-too-long",
            "message": "Line too long (122/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.heat_exchangers.moving_boundary_ntu",
            "obj": "",
            "line": 364,
            "column": 0,
            "path": "vclibpy/components/heat_exchangers/moving_boundary_ntu.py",
            "symbol": "line-too-long",
            "message": "Line too long (121/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.heat_exchangers.moving_boundary_ntu",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "vclibpy/components/heat_exchangers/moving_boundary_ntu.py",
            "symbol": "missing-module-docstring",
            "message": "Missing module docstring",
            "message-id": "C0114"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.heat_exchangers.moving_boundary_ntu",
            "obj": "MovingBoundaryNTU.separate_phases",
            "line": 41,
            "column": 8,
            "path": "vclibpy/components/heat_exchangers/moving_boundary_ntu.py",
            "symbol": "invalid-name",
            "message": "Variable name \"Q_sc\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.heat_exchangers.moving_boundary_ntu",
            "obj": "MovingBoundaryNTU.separate_phases",
            "line": 44,
            "column": 8,
            "path": "vclibpy/components/heat_exchangers/moving_boundary_ntu.py",
            "symbol": "invalid-name",
            "message": "Variable name \"Q_lat\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.heat_exchangers.moving_boundary_ntu",
            "obj": "MovingBoundaryNTU.separate_phases",
            "line": 47,
            "column": 8,
            "path": "vclibpy/components/heat_exchangers/moving_boundary_ntu.py",
            "symbol": "invalid-name",
            "message": "Variable name \"Q_sh\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.heat_exchangers.moving_boundary_ntu",
            "obj": "MovingBoundaryNTU.iterate_area",
            "line": 52,
            "column": 27,
            "path": "vclibpy/components/heat_exchangers/moving_boundary_ntu.py",
            "symbol": "invalid-name",
            "message": "Argument name \"dT_max\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.heat_exchangers.moving_boundary_ntu",
            "obj": "MovingBoundaryNTU.iterate_area",
            "line": 86,
            "column": 12,
            "path": "vclibpy/components/heat_exchangers/moving_boundary_ntu.py",
            "symbol": "invalid-name",
            "message": "Variable name \"NTU\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "refactor",
            "module": "vclibpy.components.heat_exchangers.moving_boundary_ntu",
            "obj": "MovingBoundaryNTU.iterate_area",
            "line": 89,
            "column": 16,
            "path": "vclibpy/components/heat_exchangers/moving_boundary_ntu.py",
            "symbol": "no-else-break",
            "message": "Unnecessary \"else\" after \"break\", remove the \"else\" and de-indent the code inside it",
            "message-id": "R1723"
        },
        {
            "type": "refactor",
            "module": "vclibpy.components.heat_exchangers.moving_boundary_ntu",
            "obj": "MovingBoundaryNTUCondenser.calc",
            "line": 114,
            "column": 4,
            "path": "vclibpy/components/heat_exchangers/moving_boundary_ntu.py",
            "symbol": "too-many-locals",
            "message": "Too many local variables (31/15)",
            "message-id": "R0914"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.heat_exchangers.moving_boundary_ntu",
            "obj": "MovingBoundaryNTUCondenser.calc",
            "line": 136,
            "column": 8,
            "path": "vclibpy/components/heat_exchangers/moving_boundary_ntu.py",
            "symbol": "invalid-name",
            "message": "Variable name \"Q_sc\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.heat_exchangers.moving_boundary_ntu",
            "obj": "MovingBoundaryNTUCondenser.calc",
            "line": 136,
            "column": 14,
            "path": "vclibpy/components/heat_exchangers/moving_boundary_ntu.py",
            "symbol": "invalid-name",
            "message": "Variable name \"Q_lat\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.heat_exchangers.moving_boundary_ntu",
            "obj": "MovingBoundaryNTUCondenser.calc",
            "line": 136,
            "column": 21,
            "path": "vclibpy/components/heat_exchangers/moving_boundary_ntu.py",
            "symbol": "invalid-name",
            "message": "Variable name \"Q_sh\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.heat_exchangers.moving_boundary_ntu",
            "obj": "MovingBoundaryNTUCondenser.calc",
            "line": 146,
            "column": 8,
            "path": "vclibpy/components/heat_exchangers/moving_boundary_ntu.py",
            "symbol": "invalid-name",
            "message": "Variable name \"T_mean\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.heat_exchangers.moving_boundary_ntu",
            "obj": "MovingBoundaryNTUCondenser.calc",
            "line": 152,
            "column": 8,
            "path": "vclibpy/components/heat_exchangers/moving_boundary_ntu.py",
            "symbol": "invalid-name",
            "message": "Variable name \"T_sc\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.heat_exchangers.moving_boundary_ntu",
            "obj": "MovingBoundaryNTUCondenser.calc",
            "line": 153,
            "column": 8,
            "path": "vclibpy/components/heat_exchangers/moving_boundary_ntu.py",
            "symbol": "invalid-name",
            "message": "Variable name \"T_sh\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.heat_exchangers.moving_boundary_ntu",
            "obj": "MovingBoundaryNTUCondenser.calc",
            "line": 154,
            "column": 8,
            "path": "vclibpy/components/heat_exchangers/moving_boundary_ntu.py",
            "symbol": "invalid-name",
            "message": "Variable name \"T_out\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.heat_exchangers.moving_boundary_ntu",
            "obj": "MovingBoundaryNTUCondenser.calc",
            "line": 157,
            "column": 8,
            "path": "vclibpy/components/heat_exchangers/moving_boundary_ntu.py",
            "symbol": "invalid-name",
            "message": "Variable name \"Q_sc_ntu\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.heat_exchangers.moving_boundary_ntu",
            "obj": "MovingBoundaryNTUCondenser.calc",
            "line": 157,
            "column": 18,
            "path": "vclibpy/components/heat_exchangers/moving_boundary_ntu.py",
            "symbol": "invalid-name",
            "message": "Variable name \"A_sc\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.heat_exchangers.moving_boundary_ntu",
            "obj": "MovingBoundaryNTUCondenser.calc",
            "line": 165,
            "column": 12,
            "path": "vclibpy/components/heat_exchangers/moving_boundary_ntu.py",
            "symbol": "invalid-name",
            "message": "Variable name \"A_sc\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.heat_exchangers.moving_boundary_ntu",
            "obj": "MovingBoundaryNTUCondenser.calc",
            "line": 169,
            "column": 12,
            "path": "vclibpy/components/heat_exchangers/moving_boundary_ntu.py",
            "symbol": "invalid-name",
            "message": "Variable name \"A_sc\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.heat_exchangers.moving_boundary_ntu",
            "obj": "MovingBoundaryNTUCondenser.calc",
            "line": 171,
            "column": 12,
            "path": "vclibpy/components/heat_exchangers/moving_boundary_ntu.py",
            "symbol": "invalid-name",
            "message": "Variable name \"Q_sc_ntu\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.heat_exchangers.moving_boundary_ntu",
            "obj": "MovingBoundaryNTUCondenser.calc",
            "line": 177,
            "column": 8,
            "path": "vclibpy/components/heat_exchangers/moving_boundary_ntu.py",
            "symbol": "invalid-name",
            "message": "Variable name \"Q_lat_ntu\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.heat_exchangers.moving_boundary_ntu",
            "obj": "MovingBoundaryNTUCondenser.calc",
            "line": 177,
            "column": 19,
            "path": "vclibpy/components/heat_exchangers/moving_boundary_ntu.py",
            "symbol": "invalid-name",
            "message": "Variable name \"A_lat\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.heat_exchangers.moving_boundary_ntu",
            "obj": "MovingBoundaryNTUCondenser.calc",
            "line": 188,
            "column": 12,
            "path": "vclibpy/components/heat_exchangers/moving_boundary_ntu.py",
            "symbol": "invalid-name",
            "message": "Variable name \"A_lat\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.heat_exchangers.moving_boundary_ntu",
            "obj": "MovingBoundaryNTUCondenser.calc",
            "line": 193,
            "column": 12,
            "path": "vclibpy/components/heat_exchangers/moving_boundary_ntu.py",
            "symbol": "invalid-name",
            "message": "Variable name \"A_lat\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.heat_exchangers.moving_boundary_ntu",
            "obj": "MovingBoundaryNTUCondenser.calc",
            "line": 195,
            "column": 12,
            "path": "vclibpy/components/heat_exchangers/moving_boundary_ntu.py",
            "symbol": "invalid-name",
            "message": "Variable name \"Q_lat_ntu\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "warning",
            "module": "vclibpy.components.heat_exchangers.moving_boundary_ntu",
            "obj": "MovingBoundaryNTUCondenser.calc",
            "line": 199,
            "column": 12,
            "path": "vclibpy/components/heat_exchangers/moving_boundary_ntu.py",
            "symbol": "logging-fstring-interpolation",
            "message": "Use lazy % formatting in logging functions",
            "message-id": "W1203"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.heat_exchangers.moving_boundary_ntu",
            "obj": "MovingBoundaryNTUCondenser.calc",
            "line": 202,
            "column": 8,
            "path": "vclibpy/components/heat_exchangers/moving_boundary_ntu.py",
            "symbol": "invalid-name",
            "message": "Variable name \"Q_sh_ntu\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.heat_exchangers.moving_boundary_ntu",
            "obj": "MovingBoundaryNTUCondenser.calc",
            "line": 202,
            "column": 18,
            "path": "vclibpy/components/heat_exchangers/moving_boundary_ntu.py",
            "symbol": "invalid-name",
            "message": "Variable name \"A_sh\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.heat_exchangers.moving_boundary_ntu",
            "obj": "MovingBoundaryNTUCondenser.calc",
            "line": 210,
            "column": 12,
            "path": "vclibpy/components/heat_exchangers/moving_boundary_ntu.py",
            "symbol": "invalid-name",
            "message": "Variable name \"A_sh\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.heat_exchangers.moving_boundary_ntu",
            "obj": "MovingBoundaryNTUCondenser.calc",
            "line": 212,
            "column": 12,
            "path": "vclibpy/components/heat_exchangers/moving_boundary_ntu.py",
            "symbol": "invalid-name",
            "message": "Variable name \"Q_sh_ntu\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "warning",
            "module": "vclibpy.components.heat_exchangers.moving_boundary_ntu",
            "obj": "MovingBoundaryNTUCondenser.calc",
            "line": 216,
            "column": 12,
            "path": "vclibpy/components/heat_exchangers/moving_boundary_ntu.py",
            "symbol": "logging-fstring-interpolation",
            "message": "Use lazy % formatting in logging functions",
            "message-id": "W1203"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.heat_exchangers.moving_boundary_ntu",
            "obj": "MovingBoundaryNTUCondenser.calc",
            "line": 218,
            "column": 8,
            "path": "vclibpy/components/heat_exchangers/moving_boundary_ntu.py",
            "symbol": "invalid-name",
            "message": "Variable name \"Q_ntu\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.heat_exchangers.moving_boundary_ntu",
            "obj": "MovingBoundaryNTUCondenser.calc",
            "line": 221,
            "column": 8,
            "path": "vclibpy/components/heat_exchangers/moving_boundary_ntu.py",
            "symbol": "invalid-name",
            "message": "Variable name \"dT_min_in\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.heat_exchangers.moving_boundary_ntu",
            "obj": "MovingBoundaryNTUCondenser.calc",
            "line": 222,
            "column": 8,
            "path": "vclibpy/components/heat_exchangers/moving_boundary_ntu.py",
            "symbol": "invalid-name",
            "message": "Variable name \"dT_min_out\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.heat_exchangers.moving_boundary_ntu",
            "obj": "MovingBoundaryNTUCondenser.calc",
            "line": 223,
            "column": 8,
            "path": "vclibpy/components/heat_exchangers/moving_boundary_ntu.py",
            "symbol": "invalid-name",
            "message": "Variable name \"dT_min_LatSH\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "warning",
            "module": "vclibpy.components.heat_exchangers.moving_boundary_ntu",
            "obj": "MovingBoundaryNTUCondenser.calc",
            "line": 171,
            "column": 22,
            "path": "vclibpy/components/heat_exchangers/moving_boundary_ntu.py",
            "symbol": "unused-variable",
            "message": "Unused variable 'k_sc'",
            "message-id": "W0612"
        },
        {
            "type": "warning",
            "module": "vclibpy.components.heat_exchangers.moving_boundary_ntu",
            "obj": "MovingBoundaryNTUCondenser.calc",
            "line": 195,
            "column": 23,
            "path": "vclibpy/components/heat_exchangers/moving_boundary_ntu.py",
            "symbol": "unused-variable",
            "message": "Unused variable 'k_lat'",
            "message-id": "W0612"
        },
        {
            "type": "warning",
            "module": "vclibpy.components.heat_exchangers.moving_boundary_ntu",
            "obj": "MovingBoundaryNTUCondenser.calc",
            "line": 212,
            "column": 22,
            "path": "vclibpy/components/heat_exchangers/moving_boundary_ntu.py",
            "symbol": "unused-variable",
            "message": "Unused variable 'k_sh'",
            "message-id": "W0612"
        },
        {
            "type": "refactor",
            "module": "vclibpy.components.heat_exchangers.moving_boundary_ntu",
            "obj": "MovingBoundaryNTUEvaporator.calc",
            "line": 245,
            "column": 4,
            "path": "vclibpy/components/heat_exchangers/moving_boundary_ntu.py",
            "symbol": "too-many-locals",
            "message": "Too many local variables (30/15)",
            "message-id": "R0914"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.heat_exchangers.moving_boundary_ntu",
            "obj": "MovingBoundaryNTUEvaporator.calc",
            "line": 267,
            "column": 8,
            "path": "vclibpy/components/heat_exchangers/moving_boundary_ntu.py",
            "symbol": "invalid-name",
            "message": "Variable name \"Q_sc\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.heat_exchangers.moving_boundary_ntu",
            "obj": "MovingBoundaryNTUEvaporator.calc",
            "line": 267,
            "column": 14,
            "path": "vclibpy/components/heat_exchangers/moving_boundary_ntu.py",
            "symbol": "invalid-name",
            "message": "Variable name \"Q_lat\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.heat_exchangers.moving_boundary_ntu",
            "obj": "MovingBoundaryNTUEvaporator.calc",
            "line": 267,
            "column": 21,
            "path": "vclibpy/components/heat_exchangers/moving_boundary_ntu.py",
            "symbol": "invalid-name",
            "message": "Variable name \"Q_sh\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.heat_exchangers.moving_boundary_ntu",
            "obj": "MovingBoundaryNTUEvaporator.calc",
            "line": 277,
            "column": 8,
            "path": "vclibpy/components/heat_exchangers/moving_boundary_ntu.py",
            "symbol": "invalid-name",
            "message": "Variable name \"T_mean\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.heat_exchangers.moving_boundary_ntu",
            "obj": "MovingBoundaryNTUEvaporator.calc",
            "line": 282,
            "column": 8,
            "path": "vclibpy/components/heat_exchangers/moving_boundary_ntu.py",
            "symbol": "invalid-name",
            "message": "Variable name \"T_sh\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.heat_exchangers.moving_boundary_ntu",
            "obj": "MovingBoundaryNTUEvaporator.calc",
            "line": 283,
            "column": 8,
            "path": "vclibpy/components/heat_exchangers/moving_boundary_ntu.py",
            "symbol": "invalid-name",
            "message": "Variable name \"T_sc\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.heat_exchangers.moving_boundary_ntu",
            "obj": "MovingBoundaryNTUEvaporator.calc",
            "line": 284,
            "column": 8,
            "path": "vclibpy/components/heat_exchangers/moving_boundary_ntu.py",
            "symbol": "invalid-name",
            "message": "Variable name \"T_out\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.heat_exchangers.moving_boundary_ntu",
            "obj": "MovingBoundaryNTUEvaporator.calc",
            "line": 287,
            "column": 8,
            "path": "vclibpy/components/heat_exchangers/moving_boundary_ntu.py",
            "symbol": "invalid-name",
            "message": "Variable name \"Q_sh_ntu\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.heat_exchangers.moving_boundary_ntu",
            "obj": "MovingBoundaryNTUEvaporator.calc",
            "line": 287,
            "column": 18,
            "path": "vclibpy/components/heat_exchangers/moving_boundary_ntu.py",
            "symbol": "invalid-name",
            "message": "Variable name \"A_sh\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.heat_exchangers.moving_boundary_ntu",
            "obj": "MovingBoundaryNTUEvaporator.calc",
            "line": 295,
            "column": 16,
            "path": "vclibpy/components/heat_exchangers/moving_boundary_ntu.py",
            "symbol": "invalid-name",
            "message": "Variable name \"A_sh\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.heat_exchangers.moving_boundary_ntu",
            "obj": "MovingBoundaryNTUEvaporator.calc",
            "line": 301,
            "column": 16,
            "path": "vclibpy/components/heat_exchangers/moving_boundary_ntu.py",
            "symbol": "invalid-name",
            "message": "Variable name \"A_sh\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.heat_exchangers.moving_boundary_ntu",
            "obj": "MovingBoundaryNTUEvaporator.calc",
            "line": 304,
            "column": 12,
            "path": "vclibpy/components/heat_exchangers/moving_boundary_ntu.py",
            "symbol": "invalid-name",
            "message": "Variable name \"A_sh\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.heat_exchangers.moving_boundary_ntu",
            "obj": "MovingBoundaryNTUEvaporator.calc",
            "line": 306,
            "column": 12,
            "path": "vclibpy/components/heat_exchangers/moving_boundary_ntu.py",
            "symbol": "invalid-name",
            "message": "Variable name \"Q_sh_ntu\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "warning",
            "module": "vclibpy.components.heat_exchangers.moving_boundary_ntu",
            "obj": "MovingBoundaryNTUEvaporator.calc",
            "line": 311,
            "column": 12,
            "path": "vclibpy/components/heat_exchangers/moving_boundary_ntu.py",
            "symbol": "logging-fstring-interpolation",
            "message": "Use lazy % formatting in logging functions",
            "message-id": "W1203"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.heat_exchangers.moving_boundary_ntu",
            "obj": "MovingBoundaryNTUEvaporator.calc",
            "line": 314,
            "column": 8,
            "path": "vclibpy/components/heat_exchangers/moving_boundary_ntu.py",
            "symbol": "invalid-name",
            "message": "Variable name \"Q_lat_ntu\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.heat_exchangers.moving_boundary_ntu",
            "obj": "MovingBoundaryNTUEvaporator.calc",
            "line": 314,
            "column": 19,
            "path": "vclibpy/components/heat_exchangers/moving_boundary_ntu.py",
            "symbol": "invalid-name",
            "message": "Variable name \"A_lat\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.heat_exchangers.moving_boundary_ntu",
            "obj": "MovingBoundaryNTUEvaporator.calc",
            "line": 326,
            "column": 16,
            "path": "vclibpy/components/heat_exchangers/moving_boundary_ntu.py",
            "symbol": "invalid-name",
            "message": "Variable name \"A_lat\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.heat_exchangers.moving_boundary_ntu",
            "obj": "MovingBoundaryNTUEvaporator.calc",
            "line": 331,
            "column": 16,
            "path": "vclibpy/components/heat_exchangers/moving_boundary_ntu.py",
            "symbol": "invalid-name",
            "message": "Variable name \"A_lat\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.heat_exchangers.moving_boundary_ntu",
            "obj": "MovingBoundaryNTUEvaporator.calc",
            "line": 334,
            "column": 12,
            "path": "vclibpy/components/heat_exchangers/moving_boundary_ntu.py",
            "symbol": "invalid-name",
            "message": "Variable name \"A_lat\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.heat_exchangers.moving_boundary_ntu",
            "obj": "MovingBoundaryNTUEvaporator.calc",
            "line": 335,
            "column": 12,
            "path": "vclibpy/components/heat_exchangers/moving_boundary_ntu.py",
            "symbol": "invalid-name",
            "message": "Variable name \"Q_lat_ntu\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "warning",
            "module": "vclibpy.components.heat_exchangers.moving_boundary_ntu",
            "obj": "MovingBoundaryNTUEvaporator.calc",
            "line": 339,
            "column": 12,
            "path": "vclibpy/components/heat_exchangers/moving_boundary_ntu.py",
            "symbol": "logging-fstring-interpolation",
            "message": "Use lazy % formatting in logging functions",
            "message-id": "W1203"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.heat_exchangers.moving_boundary_ntu",
            "obj": "MovingBoundaryNTUEvaporator.calc",
            "line": 342,
            "column": 8,
            "path": "vclibpy/components/heat_exchangers/moving_boundary_ntu.py",
            "symbol": "invalid-name",
            "message": "Variable name \"Q_sc_ntu\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.heat_exchangers.moving_boundary_ntu",
            "obj": "MovingBoundaryNTUEvaporator.calc",
            "line": 342,
            "column": 18,
            "path": "vclibpy/components/heat_exchangers/moving_boundary_ntu.py",
            "symbol": "invalid-name",
            "message": "Variable name \"A_sc\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.heat_exchangers.moving_boundary_ntu",
            "obj": "MovingBoundaryNTUEvaporator.calc",
            "line": 350,
            "column": 12,
            "path": "vclibpy/components/heat_exchangers/moving_boundary_ntu.py",
            "symbol": "invalid-name",
            "message": "Variable name \"A_sc\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.heat_exchangers.moving_boundary_ntu",
            "obj": "MovingBoundaryNTUEvaporator.calc",
            "line": 352,
            "column": 12,
            "path": "vclibpy/components/heat_exchangers/moving_boundary_ntu.py",
            "symbol": "invalid-name",
            "message": "Variable name \"Q_sc_ntu\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.heat_exchangers.moving_boundary_ntu",
            "obj": "MovingBoundaryNTUEvaporator.calc",
            "line": 357,
            "column": 8,
            "path": "vclibpy/components/heat_exchangers/moving_boundary_ntu.py",
            "symbol": "invalid-name",
            "message": "Variable name \"Q_ntu\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.heat_exchangers.moving_boundary_ntu",
            "obj": "MovingBoundaryNTUEvaporator.calc",
            "line": 360,
            "column": 8,
            "path": "vclibpy/components/heat_exchangers/moving_boundary_ntu.py",
            "symbol": "invalid-name",
            "message": "Variable name \"dT_min_in\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.heat_exchangers.moving_boundary_ntu",
            "obj": "MovingBoundaryNTUEvaporator.calc",
            "line": 361,
            "column": 8,
            "path": "vclibpy/components/heat_exchangers/moving_boundary_ntu.py",
            "symbol": "invalid-name",
            "message": "Variable name \"dT_min_out\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "warning",
            "module": "vclibpy.components.heat_exchangers.moving_boundary_ntu",
            "obj": "MovingBoundaryNTUEvaporator.calc",
            "line": 306,
            "column": 22,
            "path": "vclibpy/components/heat_exchangers/moving_boundary_ntu.py",
            "symbol": "unused-variable",
            "message": "Unused variable 'k_sh'",
            "message-id": "W0612"
        },
        {
            "type": "warning",
            "module": "vclibpy.components.heat_exchangers.moving_boundary_ntu",
            "obj": "MovingBoundaryNTUEvaporator.calc",
            "line": 335,
            "column": 23,
            "path": "vclibpy/components/heat_exchangers/moving_boundary_ntu.py",
            "symbol": "unused-variable",
            "message": "Unused variable 'k_lat'",
            "message-id": "W0612"
        },
        {
            "type": "warning",
            "module": "vclibpy.components.heat_exchangers.moving_boundary_ntu",
            "obj": "MovingBoundaryNTUEvaporator.calc",
            "line": 352,
            "column": 22,
            "path": "vclibpy/components/heat_exchangers/moving_boundary_ntu.py",
            "symbol": "unused-variable",
            "message": "Unused variable 'k_sc'",
            "message-id": "W0612"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.heat_exchangers.economizer",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "vclibpy/components/heat_exchangers/economizer.py",
            "symbol": "missing-module-docstring",
            "message": "Missing module docstring",
            "message-id": "C0114"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.heat_exchangers.economizer",
            "obj": "VaporInjectionEconomizerNTU.state_two_phase_inlet",
            "line": 40,
            "column": 4,
            "path": "vclibpy/components/heat_exchangers/economizer.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.heat_exchangers.economizer",
            "obj": "VaporInjectionEconomizerNTU.state_two_phase_outlet",
            "line": 48,
            "column": 4,
            "path": "vclibpy/components/heat_exchangers/economizer.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.heat_exchangers.heat_exchanger",
            "obj": "",
            "line": 8,
            "column": 0,
            "path": "vclibpy/components/heat_exchangers/heat_exchanger.py",
            "symbol": "line-too-long",
            "message": "Line too long (109/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.heat_exchangers.heat_exchanger",
            "obj": "",
            "line": 98,
            "column": 0,
            "path": "vclibpy/components/heat_exchangers/heat_exchanger.py",
            "symbol": "line-too-long",
            "message": "Line too long (106/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.heat_exchangers.heat_exchanger",
            "obj": "",
            "line": 234,
            "column": 0,
            "path": "vclibpy/components/heat_exchangers/heat_exchanger.py",
            "symbol": "line-too-long",
            "message": "Line too long (109/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.heat_exchangers.heat_exchanger",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "vclibpy/components/heat_exchangers/heat_exchanger.py",
            "symbol": "missing-module-docstring",
            "message": "Missing module docstring",
            "message-id": "C0114"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.heat_exchangers.heat_exchanger",
            "obj": "HeatExchanger.__init__",
            "line": 43,
            "column": 8,
            "path": "vclibpy/components/heat_exchangers/heat_exchanger.py",
            "symbol": "invalid-name",
            "message": "Attribute name \"A\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "refactor",
            "module": "vclibpy.components.heat_exchangers.heat_exchanger",
            "obj": "HeatExchanger",
            "line": 11,
            "column": 0,
            "path": "vclibpy/components/heat_exchangers/heat_exchanger.py",
            "symbol": "too-many-instance-attributes",
            "message": "Too many instance attributes (11/7)",
            "message-id": "R0902"
        },
        {
            "type": "refactor",
            "module": "vclibpy.components.heat_exchangers.heat_exchanger",
            "obj": "HeatExchanger.__init__",
            "line": 32,
            "column": 4,
            "path": "vclibpy/components/heat_exchangers/heat_exchanger.py",
            "symbol": "too-many-arguments",
            "message": "Too many arguments (8/5)",
            "message-id": "R0913"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.heat_exchangers.heat_exchanger",
            "obj": "HeatExchanger.m_flow_secondary",
            "line": 181,
            "column": 4,
            "path": "vclibpy/components/heat_exchangers/heat_exchanger.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.heat_exchangers.heat_exchanger",
            "obj": "HeatExchanger.m_flow_secondary_cp",
            "line": 190,
            "column": 4,
            "path": "vclibpy/components/heat_exchangers/heat_exchanger.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.heat_exchangers.heat_exchanger",
            "obj": "HeatExchanger.calc_secondary_Q_flow",
            "line": 204,
            "column": 4,
            "path": "vclibpy/components/heat_exchangers/heat_exchanger.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.heat_exchangers.heat_exchanger",
            "obj": "HeatExchanger.calc_secondary_Q_flow",
            "line": 204,
            "column": 4,
            "path": "vclibpy/components/heat_exchangers/heat_exchanger.py",
            "symbol": "invalid-name",
            "message": "Method name \"calc_secondary_Q_flow\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.heat_exchangers.heat_exchanger",
            "obj": "HeatExchanger.calc_secondary_Q_flow",
            "line": 204,
            "column": 36,
            "path": "vclibpy/components/heat_exchangers/heat_exchanger.py",
            "symbol": "invalid-name",
            "message": "Argument name \"Q_flow\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.heat_exchangers.heat_exchanger",
            "obj": "HeatExchanger.calc_Q_flow",
            "line": 207,
            "column": 4,
            "path": "vclibpy/components/heat_exchangers/heat_exchanger.py",
            "symbol": "invalid-name",
            "message": "Method name \"calc_Q_flow\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.heat_exchangers.ntu",
            "obj": "",
            "line": 95,
            "column": 0,
            "path": "vclibpy/components/heat_exchangers/ntu.py",
            "symbol": "line-too-long",
            "message": "Line too long (120/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.heat_exchangers.ntu",
            "obj": "",
            "line": 133,
            "column": 0,
            "path": "vclibpy/components/heat_exchangers/ntu.py",
            "symbol": "line-too-long",
            "message": "Line too long (106/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.heat_exchangers.ntu",
            "obj": "",
            "line": 142,
            "column": 0,
            "path": "vclibpy/components/heat_exchangers/ntu.py",
            "symbol": "line-too-long",
            "message": "Line too long (118/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.heat_exchangers.ntu",
            "obj": "",
            "line": 152,
            "column": 0,
            "path": "vclibpy/components/heat_exchangers/ntu.py",
            "symbol": "line-too-long",
            "message": "Line too long (104/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.heat_exchangers.ntu",
            "obj": "",
            "line": 154,
            "column": 0,
            "path": "vclibpy/components/heat_exchangers/ntu.py",
            "symbol": "line-too-long",
            "message": "Line too long (110/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.heat_exchangers.ntu",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "vclibpy/components/heat_exchangers/ntu.py",
            "symbol": "missing-module-docstring",
            "message": "Missing module docstring",
            "message-id": "C0114"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.heat_exchangers.ntu",
            "obj": "BasicNTU.calc_eps",
            "line": 67,
            "column": 33,
            "path": "vclibpy/components/heat_exchangers/ntu.py",
            "symbol": "invalid-name",
            "message": "Argument name \"NTU\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.heat_exchangers.ntu",
            "obj": "BasicNTU.calc_R",
            "line": 93,
            "column": 4,
            "path": "vclibpy/components/heat_exchangers/ntu.py",
            "symbol": "invalid-name",
            "message": "Method name \"calc_R\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.heat_exchangers.ntu",
            "obj": "BasicNTU.calc_NTU",
            "line": 126,
            "column": 4,
            "path": "vclibpy/components/heat_exchangers/ntu.py",
            "symbol": "invalid-name",
            "message": "Method name \"calc_NTU\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.heat_exchangers.ntu",
            "obj": "BasicNTU.calc_NTU",
            "line": 126,
            "column": 17,
            "path": "vclibpy/components/heat_exchangers/ntu.py",
            "symbol": "invalid-name",
            "message": "Argument name \"A\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.heat_exchangers.ntu",
            "obj": "BasicNTU.calc_Q_ntu",
            "line": 152,
            "column": 4,
            "path": "vclibpy/components/heat_exchangers/ntu.py",
            "symbol": "invalid-name",
            "message": "Method name \"calc_Q_ntu\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.heat_exchangers.ntu",
            "obj": "BasicNTU.calc_Q_ntu",
            "line": 152,
            "column": 25,
            "path": "vclibpy/components/heat_exchangers/ntu.py",
            "symbol": "invalid-name",
            "message": "Argument name \"dT_max\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.heat_exchangers.ntu",
            "obj": "BasicNTU.calc_Q_ntu",
            "line": 152,
            "column": 76,
            "path": "vclibpy/components/heat_exchangers/ntu.py",
            "symbol": "invalid-name",
            "message": "Argument name \"A\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.heat_exchangers.ntu",
            "obj": "BasicNTU.calc_Q_ntu",
            "line": 168,
            "column": 8,
            "path": "vclibpy/components/heat_exchangers/ntu.py",
            "symbol": "invalid-name",
            "message": "Variable name \"NTU\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.heat_exchangers.ntu",
            "obj": "BasicNTU.calc_Q_ntu",
            "line": 172,
            "column": 8,
            "path": "vclibpy/components/heat_exchangers/ntu.py",
            "symbol": "invalid-name",
            "message": "Variable name \"Q_max\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.heat_exchangers.heat_transfer.air_to_wall",
            "obj": "",
            "line": 36,
            "column": 0,
            "path": "vclibpy/components/heat_exchangers/heat_transfer/air_to_wall.py",
            "symbol": "line-too-long",
            "message": "Line too long (113/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.heat_exchangers.heat_transfer.air_to_wall",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "vclibpy/components/heat_exchangers/heat_transfer/air_to_wall.py",
            "symbol": "missing-module-docstring",
            "message": "Missing module docstring",
            "message-id": "C0114"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.heat_exchangers.heat_transfer.air_to_wall",
            "obj": "AirToWallTransfer.__init__",
            "line": 24,
            "column": 8,
            "path": "vclibpy/components/heat_exchangers/heat_transfer/air_to_wall.py",
            "symbol": "invalid-name",
            "message": "Attribute name \"A_cross\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.heat_exchangers.heat_transfer.air_to_wall",
            "obj": "AirToWallTransfer.__init__",
            "line": 23,
            "column": 23,
            "path": "vclibpy/components/heat_exchangers/heat_transfer/air_to_wall.py",
            "symbol": "invalid-name",
            "message": "Argument name \"A_cross\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.heat_exchangers.heat_transfer.air_to_wall",
            "obj": "AirToWallTransfer.calc",
            "line": 35,
            "column": 8,
            "path": "vclibpy/components/heat_exchangers/heat_transfer/air_to_wall.py",
            "symbol": "invalid-name",
            "message": "Variable name \"Re\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.heat_exchangers.heat_transfer.air_to_wall",
            "obj": "AirToWallTransfer.calc_laminar_area_nusselt",
            "line": 54,
            "column": 40,
            "path": "vclibpy/components/heat_exchangers/heat_transfer/air_to_wall.py",
            "symbol": "invalid-name",
            "message": "Argument name \"Re\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.heat_exchangers.heat_transfer.air_to_wall",
            "obj": "",
            "line": 5,
            "column": 0,
            "path": "vclibpy/components/heat_exchangers/heat_transfer/air_to_wall.py",
            "symbol": "wrong-import-order",
            "message": "first party import \"from vclibpy.media import TransportProperties\" should be placed before \"from .heat_transfer import HeatTransfer\"",
            "message-id": "C0411"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.heat_exchangers.heat_transfer.pipe_to_wall",
            "obj": "",
            "line": 73,
            "column": 0,
            "path": "vclibpy/components/heat_exchangers/heat_transfer/pipe_to_wall.py",
            "symbol": "line-too-long",
            "message": "Line too long (104/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.heat_exchangers.heat_transfer.pipe_to_wall",
            "obj": "",
            "line": 81,
            "column": 0,
            "path": "vclibpy/components/heat_exchangers/heat_transfer/pipe_to_wall.py",
            "symbol": "line-too-long",
            "message": "Line too long (104/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.heat_exchangers.heat_transfer.pipe_to_wall",
            "obj": "",
            "line": 84,
            "column": 0,
            "path": "vclibpy/components/heat_exchangers/heat_transfer/pipe_to_wall.py",
            "symbol": "line-too-long",
            "message": "Line too long (104/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.heat_exchangers.heat_transfer.pipe_to_wall",
            "obj": "",
            "line": 93,
            "column": 0,
            "path": "vclibpy/components/heat_exchangers/heat_transfer/pipe_to_wall.py",
            "symbol": "line-too-long",
            "message": "Line too long (104/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.heat_exchangers.heat_transfer.pipe_to_wall",
            "obj": "TurbulentFluidInPipeToWallTransfer.calc",
            "line": 51,
            "column": 8,
            "path": "vclibpy/components/heat_exchangers/heat_transfer/pipe_to_wall.py",
            "symbol": "invalid-name",
            "message": "Variable name \"Re\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.heat_exchangers.heat_transfer.pipe_to_wall",
            "obj": "TurbulentFluidInPipeToWallTransfer.calc_turbulent_tube_nusselt",
            "line": 59,
            "column": 42,
            "path": "vclibpy/components/heat_exchangers/heat_transfer/pipe_to_wall.py",
            "symbol": "invalid-name",
            "message": "Argument name \"Re\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "refactor",
            "module": "vclibpy.components.heat_exchangers.heat_transfer.pipe_to_wall",
            "obj": "TurbulentFluidInPipeToWallTransfer.calc_turbulent_tube_nusselt",
            "line": 74,
            "column": 12,
            "path": "vclibpy/components/heat_exchangers/heat_transfer/pipe_to_wall.py",
            "symbol": "no-else-return",
            "message": "Unnecessary \"elif\" after \"return\", remove the leading \"el\" from \"elif\"",
            "message-id": "R1705"
        },
        {
            "type": "refactor",
            "module": "vclibpy.components.heat_exchangers.heat_transfer.pipe_to_wall",
            "obj": "TurbulentFluidInPipeToWallTransfer.calc_turbulent_tube_nusselt",
            "line": 59,
            "column": 4,
            "path": "vclibpy/components/heat_exchangers/heat_transfer/pipe_to_wall.py",
            "symbol": "too-many-branches",
            "message": "Too many branches (14/12)",
            "message-id": "R0912"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.heat_exchangers.heat_transfer.pipe_to_wall",
            "obj": "",
            "line": 6,
            "column": 0,
            "path": "vclibpy/components/heat_exchangers/heat_transfer/pipe_to_wall.py",
            "symbol": "wrong-import-order",
            "message": "first party import \"from vclibpy.media import TransportProperties\" should be placed before \"from .heat_transfer import HeatTransfer, calc_reynolds_pipe\"",
            "message-id": "C0411"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.heat_exchangers.heat_transfer",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "vclibpy/components/heat_exchangers/heat_transfer/__init__.py",
            "symbol": "missing-module-docstring",
            "message": "Missing module docstring",
            "message-id": "C0114"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.heat_exchangers.heat_transfer",
            "obj": "",
            "line": 2,
            "column": 0,
            "path": "vclibpy/components/heat_exchangers/heat_transfer/__init__.py",
            "symbol": "wrong-import-order",
            "message": "first party import \"from vclibpy.components.heat_exchangers.heat_transfer import constant\" should be placed before \"from .heat_transfer import TwoPhaseHeatTransfer, HeatTransfer, calc_reynolds_pipe\"",
            "message-id": "C0411"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.heat_exchangers.heat_transfer",
            "obj": "",
            "line": 3,
            "column": 0,
            "path": "vclibpy/components/heat_exchangers/heat_transfer/__init__.py",
            "symbol": "wrong-import-order",
            "message": "first party import \"from vclibpy.components.heat_exchangers.heat_transfer import wall\" should be placed before \"from .heat_transfer import TwoPhaseHeatTransfer, HeatTransfer, calc_reynolds_pipe\"",
            "message-id": "C0411"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.heat_exchangers.heat_transfer.constant",
            "obj": "",
            "line": 26,
            "column": 0,
            "path": "vclibpy/components/heat_exchangers/heat_transfer/constant.py",
            "symbol": "line-too-long",
            "message": "Line too long (102/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.heat_exchangers.heat_transfer.constant",
            "obj": "",
            "line": 53,
            "column": 0,
            "path": "vclibpy/components/heat_exchangers/heat_transfer/constant.py",
            "symbol": "line-too-long",
            "message": "Line too long (106/100)",
            "message-id": "C0301"
        },
        {
            "type": "warning",
            "module": "vclibpy.components.heat_exchangers.heat_transfer.constant",
            "obj": "ConstantHeatTransfer.calc",
            "line": 21,
            "column": 19,
            "path": "vclibpy/components/heat_exchangers/heat_transfer/constant.py",
            "symbol": "unused-argument",
            "message": "Unused argument 'transport_properties'",
            "message-id": "W0613"
        },
        {
            "type": "warning",
            "module": "vclibpy.components.heat_exchangers.heat_transfer.constant",
            "obj": "ConstantHeatTransfer.calc",
            "line": 21,
            "column": 62,
            "path": "vclibpy/components/heat_exchangers/heat_transfer/constant.py",
            "symbol": "unused-argument",
            "message": "Unused argument 'm_flow'",
            "message-id": "W0613"
        },
        {
            "type": "refactor",
            "module": "vclibpy.components.heat_exchangers.heat_transfer.constant",
            "obj": "ConstantHeatTransfer",
            "line": 9,
            "column": 0,
            "path": "vclibpy/components/heat_exchangers/heat_transfer/constant.py",
            "symbol": "too-few-public-methods",
            "message": "Too few public methods (1/2)",
            "message-id": "R0903"
        },
        {
            "type": "warning",
            "module": "vclibpy.components.heat_exchangers.heat_transfer.constant",
            "obj": "ConstantTwoPhaseHeatTransfer.calc",
            "line": 48,
            "column": 0,
            "path": "vclibpy/components/heat_exchangers/heat_transfer/constant.py",
            "symbol": "unused-argument",
            "message": "Unused argument 'kwargs'",
            "message-id": "W0613"
        },
        {
            "type": "refactor",
            "module": "vclibpy.components.heat_exchangers.heat_transfer.constant",
            "obj": "ConstantTwoPhaseHeatTransfer",
            "line": 36,
            "column": 0,
            "path": "vclibpy/components/heat_exchangers/heat_transfer/constant.py",
            "symbol": "too-few-public-methods",
            "message": "Too few public methods (1/2)",
            "message-id": "R0903"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.heat_exchangers.heat_transfer.heat_transfer",
            "obj": "",
            "line": 61,
            "column": 0,
            "path": "vclibpy/components/heat_exchangers/heat_transfer/heat_transfer.py",
            "symbol": "line-too-long",
            "message": "Line too long (104/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.heat_exchangers.heat_transfer.heat_transfer",
            "obj": "",
            "line": 79,
            "column": 0,
            "path": "vclibpy/components/heat_exchangers/heat_transfer/heat_transfer.py",
            "symbol": "line-too-long",
            "message": "Line too long (103/100)",
            "message-id": "C0301"
        },
        {
            "type": "refactor",
            "module": "vclibpy.components.heat_exchangers.heat_transfer.heat_transfer",
            "obj": "HeatTransfer",
            "line": 12,
            "column": 0,
            "path": "vclibpy/components/heat_exchangers/heat_transfer/heat_transfer.py",
            "symbol": "too-few-public-methods",
            "message": "Too few public methods (1/2)",
            "message-id": "R0903"
        },
        {
            "type": "refactor",
            "module": "vclibpy.components.heat_exchangers.heat_transfer.heat_transfer",
            "obj": "TwoPhaseHeatTransfer.calc",
            "line": 46,
            "column": 4,
            "path": "vclibpy/components/heat_exchangers/heat_transfer/heat_transfer.py",
            "symbol": "too-many-arguments",
            "message": "Too many arguments (9/5)",
            "message-id": "R0913"
        },
        {
            "type": "refactor",
            "module": "vclibpy.components.heat_exchangers.heat_transfer.heat_transfer",
            "obj": "TwoPhaseHeatTransfer",
            "line": 40,
            "column": 0,
            "path": "vclibpy/components/heat_exchangers/heat_transfer/heat_transfer.py",
            "symbol": "too-few-public-methods",
            "message": "Too few public methods (1/2)",
            "message-id": "R0903"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.heat_exchangers.heat_transfer.vdi_atlas_air_to_wall",
            "obj": "",
            "line": 41,
            "column": 0,
            "path": "vclibpy/components/heat_exchangers/heat_transfer/vdi_atlas_air_to_wall.py",
            "symbol": "line-too-long",
            "message": "Line too long (106/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.heat_exchangers.heat_transfer.vdi_atlas_air_to_wall",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "vclibpy/components/heat_exchangers/heat_transfer/vdi_atlas_air_to_wall.py",
            "symbol": "missing-module-docstring",
            "message": "Missing module docstring",
            "message-id": "C0114"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.heat_exchangers.heat_transfer.vdi_atlas_air_to_wall",
            "obj": "AirSourceHeatExchangerGeometry",
            "line": 25,
            "column": 4,
            "path": "vclibpy/components/heat_exchangers/heat_transfer/vdi_atlas_air_to_wall.py",
            "symbol": "invalid-name",
            "message": "Attribute name \"lambda_R\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.heat_exchangers.heat_transfer.vdi_atlas_air_to_wall",
            "obj": "AirSourceHeatExchangerGeometry",
            "line": 26,
            "column": 4,
            "path": "vclibpy/components/heat_exchangers/heat_transfer/vdi_atlas_air_to_wall.py",
            "symbol": "invalid-name",
            "message": "Attribute name \"n_Rohre\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.heat_exchangers.heat_transfer.vdi_atlas_air_to_wall",
            "obj": "AirSourceHeatExchangerGeometry",
            "line": 27,
            "column": 4,
            "path": "vclibpy/components/heat_exchangers/heat_transfer/vdi_atlas_air_to_wall.py",
            "symbol": "invalid-name",
            "message": "Attribute name \"n_Rippen\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.heat_exchangers.heat_transfer.vdi_atlas_air_to_wall",
            "obj": "AirSourceHeatExchangerGeometry",
            "line": 28,
            "column": 4,
            "path": "vclibpy/components/heat_exchangers/heat_transfer/vdi_atlas_air_to_wall.py",
            "symbol": "invalid-name",
            "message": "Attribute name \"a\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "refactor",
            "module": "vclibpy.components.heat_exchangers.heat_transfer.vdi_atlas_air_to_wall",
            "obj": "AirSourceHeatExchangerGeometry",
            "line": 12,
            "column": 0,
            "path": "vclibpy/components/heat_exchangers/heat_transfer/vdi_atlas_air_to_wall.py",
            "symbol": "too-many-instance-attributes",
            "message": "Too many instance attributes (12/7)",
            "message-id": "R0902"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.heat_exchangers.heat_transfer.vdi_atlas_air_to_wall",
            "obj": "AirSourceHeatExchangerGeometry.A_Rippen",
            "line": 39,
            "column": 4,
            "path": "vclibpy/components/heat_exchangers/heat_transfer/vdi_atlas_air_to_wall.py",
            "symbol": "invalid-name",
            "message": "Attribute name \"A_Rippen\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.heat_exchangers.heat_transfer.vdi_atlas_air_to_wall",
            "obj": "AirSourceHeatExchangerGeometry.A",
            "line": 44,
            "column": 4,
            "path": "vclibpy/components/heat_exchangers/heat_transfer/vdi_atlas_air_to_wall.py",
            "symbol": "invalid-name",
            "message": "Attribute name \"A\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.heat_exchangers.heat_transfer.vdi_atlas_air_to_wall",
            "obj": "AirSourceHeatExchangerGeometry.A_FreieOberflaecheRohr",
            "line": 49,
            "column": 4,
            "path": "vclibpy/components/heat_exchangers/heat_transfer/vdi_atlas_air_to_wall.py",
            "symbol": "invalid-name",
            "message": "Attribute name \"A_FreieOberflaecheRohr\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.heat_exchangers.heat_transfer.vdi_atlas_air_to_wall",
            "obj": "AirSourceHeatExchangerGeometry.A_RohrInnen",
            "line": 54,
            "column": 4,
            "path": "vclibpy/components/heat_exchangers/heat_transfer/vdi_atlas_air_to_wall.py",
            "symbol": "invalid-name",
            "message": "Attribute name \"A_RohrInnen\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.heat_exchangers.heat_transfer.vdi_atlas_air_to_wall",
            "obj": "AirSourceHeatExchangerGeometry.A_RohrUnberippt",
            "line": 59,
            "column": 4,
            "path": "vclibpy/components/heat_exchangers/heat_transfer/vdi_atlas_air_to_wall.py",
            "symbol": "invalid-name",
            "message": "Attribute name \"A_RohrUnberippt\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.heat_exchangers.heat_transfer.vdi_atlas_air_to_wall",
            "obj": "AirSourceHeatExchangerGeometry.eta_R",
            "line": 82,
            "column": 4,
            "path": "vclibpy/components/heat_exchangers/heat_transfer/vdi_atlas_air_to_wall.py",
            "symbol": "invalid-name",
            "message": "Method name \"eta_R\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.heat_exchangers.heat_transfer.vdi_atlas_air_to_wall",
            "obj": "AirSourceHeatExchangerGeometry.eta_R",
            "line": 82,
            "column": 20,
            "path": "vclibpy/components/heat_exchangers/heat_transfer/vdi_atlas_air_to_wall.py",
            "symbol": "invalid-name",
            "message": "Argument name \"alpha_R\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.heat_exchangers.heat_transfer.vdi_atlas_air_to_wall",
            "obj": "AirSourceHeatExchangerGeometry.eta_R",
            "line": 92,
            "column": 8,
            "path": "vclibpy/components/heat_exchangers/heat_transfer/vdi_atlas_air_to_wall.py",
            "symbol": "invalid-name",
            "message": "Variable name \"X\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.heat_exchangers.heat_transfer.vdi_atlas_air_to_wall",
            "obj": "AirSourceHeatExchangerGeometry.alpha_S",
            "line": 95,
            "column": 4,
            "path": "vclibpy/components/heat_exchangers/heat_transfer/vdi_atlas_air_to_wall.py",
            "symbol": "invalid-name",
            "message": "Method name \"alpha_S\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.heat_exchangers.heat_transfer.vdi_atlas_air_to_wall",
            "obj": "AirSourceHeatExchangerGeometry.alpha_S",
            "line": 95,
            "column": 22,
            "path": "vclibpy/components/heat_exchangers/heat_transfer/vdi_atlas_air_to_wall.py",
            "symbol": "invalid-name",
            "message": "Argument name \"alpha_R\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.heat_exchangers.heat_transfer.vdi_atlas_air_to_wall",
            "obj": "AirSourceHeatExchangerGeometry.alpha_S",
            "line": 105,
            "column": 8,
            "path": "vclibpy/components/heat_exchangers/heat_transfer/vdi_atlas_air_to_wall.py",
            "symbol": "invalid-name",
            "message": "Variable name \"A_R_to_A\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.heat_exchangers.heat_transfer.vdi_atlas_air_to_wall",
            "obj": "VDIAtlasAirToWallTransfer.calc_laminar_area_nusselt",
            "line": 155,
            "column": 8,
            "path": "vclibpy/components/heat_exchangers/heat_transfer/vdi_atlas_air_to_wall.py",
            "symbol": "invalid-name",
            "message": "Variable name \"C\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.heat_exchangers.heat_transfer.vdi_atlas_air_to_wall",
            "obj": "VDIAtlasAirToWallTransfer.calc_laminar_area_nusselt",
            "line": 158,
            "column": 8,
            "path": "vclibpy/components/heat_exchangers/heat_transfer/vdi_atlas_air_to_wall.py",
            "symbol": "invalid-name",
            "message": "Variable name \"A_div_A_0\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.heat_exchangers.heat_transfer.vdi_atlas_air_to_wall",
            "obj": "VDIAtlasAirToWallTransfer.calc_laminar_area_nusselt",
            "line": 166,
            "column": 8,
            "path": "vclibpy/components/heat_exchangers/heat_transfer/vdi_atlas_air_to_wall.py",
            "symbol": "invalid-name",
            "message": "Variable name \"alpha_R\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.heat_exchangers.heat_transfer.vdi_atlas_air_to_wall",
            "obj": "VDIAtlasAirToWallTransfer.calc_laminar_area_nusselt",
            "line": 167,
            "column": 8,
            "path": "vclibpy/components/heat_exchangers/heat_transfer/vdi_atlas_air_to_wall.py",
            "symbol": "invalid-name",
            "message": "Variable name \"alpha_S\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.heat_exchangers.heat_transfer.wall",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "vclibpy/components/heat_exchangers/heat_transfer/wall.py",
            "symbol": "missing-module-docstring",
            "message": "Missing module docstring",
            "message-id": "C0114"
        },
        {
            "type": "refactor",
            "module": "vclibpy.components.heat_exchangers.heat_transfer.wall",
            "obj": "WallTransfer",
            "line": 10,
            "column": 0,
            "path": "vclibpy/components/heat_exchangers/heat_transfer/wall.py",
            "symbol": "too-few-public-methods",
            "message": "Too few public methods (1/2)",
            "message-id": "R0903"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.heat_exchangers.heat_transfer.wall",
            "obj": "",
            "line": 4,
            "column": 0,
            "path": "vclibpy/components/heat_exchangers/heat_transfer/wall.py",
            "symbol": "wrong-import-order",
            "message": "first party import \"from vclibpy.media import TransportProperties\" should be placed before \"from .heat_transfer import HeatTransfer\"",
            "message-id": "C0411"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.expansion_valves.expansion_valve",
            "obj": "ExpansionValve.__init__",
            "line": 20,
            "column": 8,
            "path": "vclibpy/components/expansion_valves/expansion_valve.py",
            "symbol": "invalid-name",
            "message": "Attribute name \"A\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.expansion_valves.bernoulli",
            "obj": "",
            "line": 16,
            "column": 0,
            "path": "vclibpy/components/expansion_valves/bernoulli.py",
            "symbol": "line-too-long",
            "message": "Line too long (110/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.expansion_valves.bernoulli",
            "obj": "",
            "line": 21,
            "column": 0,
            "path": "vclibpy/components/expansion_valves/bernoulli.py",
            "symbol": "line-too-long",
            "message": "Line too long (103/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "vclibpy.components.expansion_valves",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "vclibpy/components/expansion_valves/__init__.py",
            "symbol": "missing-module-docstring",
            "message": "Missing module docstring",
            "message-id": "C0114"
        },
        {
            "type": "refactor",
            "module": "vclibpy.components.expansion_valves.__init__",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "vclibpy/components/expansion_valves/__init__.py",
            "symbol": "cyclic-import",
            "message": "Cyclic import (vclibpy.media -> vclibpy.media.media)",
            "message-id": "R0401"
        },
        {
            "type": "refactor",
            "module": "vclibpy.components.expansion_valves.__init__",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "vclibpy/components/expansion_valves/__init__.py",
            "symbol": "cyclic-import",
            "message": "Cyclic import (vclibpy.flowsheets -> vclibpy.flowsheets.vapor_injection_phase_separator -> vclibpy.flowsheets.vapor_injection)",
            "message-id": "R0401"
        },
        {
            "type": "refactor",
            "module": "vclibpy.components.expansion_valves.__init__",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "vclibpy/components/expansion_valves/__init__.py",
            "symbol": "cyclic-import",
            "message": "Cyclic import (vclibpy.flowsheets -> vclibpy.flowsheets.standard)",
            "message-id": "R0401"
        },
        {
            "type": "refactor",
            "module": "vclibpy.components.expansion_valves.__init__",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "vclibpy/components/expansion_valves/__init__.py",
            "symbol": "cyclic-import",
            "message": "Cyclic import (vclibpy.components.expansion_valves -> vclibpy.components.expansion_valves.bernoulli)",
            "message-id": "R0401"
        },
        {
            "type": "refactor",
            "module": "vclibpy.components.expansion_valves.__init__",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "vclibpy/components/expansion_valves/__init__.py",
            "symbol": "cyclic-import",
            "message": "Cyclic import (vclibpy.flowsheets -> vclibpy.flowsheets.vapor_injection_economizer -> vclibpy.flowsheets.vapor_injection)",
            "message-id": "R0401"
        },
        {
            "type": "refactor",
            "module": "vclibpy.components.expansion_valves.__init__",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "vclibpy/components/expansion_valves/__init__.py",
            "symbol": "cyclic-import",
            "message": "Cyclic import (vclibpy.utils -> vclibpy.utils.automation)",
            "message-id": "R0401"
        },
        {
            "type": "refactor",
            "module": "vclibpy.components.expansion_valves.__init__",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "vclibpy/components/expansion_valves/__init__.py",
            "symbol": "cyclic-import",
            "message": "Cyclic import (vclibpy.media -> vclibpy.media.ref_prop)",
            "message-id": "R0401"
        },
        {
            "type": "refactor",
            "module": "vclibpy.components.expansion_valves.__init__",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "vclibpy/components/expansion_valves/__init__.py",
            "symbol": "cyclic-import",
            "message": "Cyclic import (vclibpy.media -> vclibpy.media.cool_prop -> vclibpy.media.media)",
            "message-id": "R0401"
        }
    ],
    "stats": {
        "bad_names": {
            "argument": 33,
            "attr": 18,
            "klass": 0,
            "class_attribute": 0,
            "class_const": 0,
            "const": 0,
            "inlinevar": 0,
            "function": 0,
            "method": 7,
            "module": 0,
            "variable": 172,
            "typevar": 0,
            "typealias": 0
        },
        "by_module": {
            "vclibpy": {
                "convention": 0,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 2,
                "warning": 0
            },
            "vclibpy.datamodels": {
                "convention": 0,
                "error": 1,
                "fatal": 0,
                "info": 0,
                "refactor": 1,
                "statement": 51,
                "warning": 0
            },
            "vclibpy.flowsheets.vapor_injection_economizer": {
                "convention": 4,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 1,
                "statement": 49,
                "warning": 1
            },
            "vclibpy.flowsheets.vapor_injection_phase_separator": {
                "convention": 1,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 18,
                "warning": 0
            },
            "vclibpy.flowsheets.__init__": {
                "convention": 1,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 4,
                "warning": 0
            },
            "vclibpy.flowsheets.base": {
                "convention": 31,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 8,
                "statement": 228,
                "warning": 0
            },
            "vclibpy.flowsheets.vapor_injection": {
                "convention": 4,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 64,
                "warning": 0
            },
            "vclibpy.flowsheets.standard": {
                "convention": 2,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 36,
                "warning": 0
            },
            "vclibpy.utils.sdf_": {
                "convention": 5,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 4,
                "statement": 75,
                "warning": 0
            },
            "vclibpy.utils.nominal_design": {
                "convention": 8,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 1,
                "statement": 35,
                "warning": 2
            },
            "vclibpy.utils.ten_coefficient_compressor_reqression": {
                "convention": 20,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 3,
                "statement": 65,
                "warning": 3
            },
            "vclibpy.utils.__init__": {
                "convention": 1,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 2,
                "warning": 0
            },
            "vclibpy.utils.plotting": {
                "convention": 26,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 8,
                "statement": 141,
                "warning": 0
            },
            "vclibpy.utils.automation": {
                "convention": 16,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 6,
                "statement": 99,
                "warning": 7
            },
            "vclibpy.media.states": {
                "convention": 9,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 4,
                "statement": 60,
                "warning": 0
            },
            "vclibpy.media.__init__": {
                "convention": 1,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 12,
                "warning": 2
            },
            "vclibpy.media.media": {
                "convention": 17,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 50,
                "warning": 6
            },
            "vclibpy.media.ref_prop": {
                "convention": 70,
                "error": 1,
                "fatal": 0,
                "info": 0,
                "refactor": 13,
                "statement": 427,
                "warning": 7
            },
            "vclibpy.media.cool_prop": {
                "convention": 3,
                "error": 0,
                "fatal": 0,
                "info": 21,
                "refactor": 0,
                "statement": 59,
                "warning": 0
            },
            "vclibpy.components.__init__": {
                "convention": 0,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 0,
                "warning": 0
            },
            "vclibpy.components.phase_separator": {
                "convention": 0,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 21,
                "warning": 0
            },
            "vclibpy.components.component": {
                "convention": 4,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 28,
                "warning": 2
            },
            "vclibpy.components.compressors.ten_coefficient": {
                "convention": 42,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 2,
                "statement": 95,
                "warning": 0
            },
            "vclibpy.components.compressors.compressor": {
                "convention": 9,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 38,
                "warning": 0
            },
            "vclibpy.components.compressors.rotary": {
                "convention": 12,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 2,
                "statement": 49,
                "warning": 0
            },
            "vclibpy.components.compressors.__init__": {
                "convention": 1,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 4,
                "warning": 0
            },
            "vclibpy.components.compressors.constant_effectivness": {
                "convention": 3,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 1,
                "statement": 14,
                "warning": 0
            },
            "vclibpy.components.heat_exchangers.__init__": {
                "convention": 1,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 2,
                "warning": 0
            },
            "vclibpy.components.heat_exchangers.moving_boundary_ntu": {
                "convention": 73,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 3,
                "statement": 134,
                "warning": 10
            },
            "vclibpy.components.heat_exchangers.economizer": {
                "convention": 3,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 31,
                "warning": 0
            },
            "vclibpy.components.heat_exchangers.heat_exchanger": {
                "convention": 11,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 2,
                "statement": 68,
                "warning": 0
            },
            "vclibpy.components.heat_exchangers.ntu": {
                "convention": 15,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 49,
                "warning": 0
            },
            "vclibpy.components.heat_exchangers.heat_transfer.air_to_wall": {
                "convention": 7,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 31,
                "warning": 0
            },
            "vclibpy.components.heat_exchangers.heat_transfer.pipe_to_wall": {
                "convention": 7,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 2,
                "statement": 36,
                "warning": 0
            },
            "vclibpy.components.heat_exchangers.heat_transfer.__init__": {
                "convention": 3,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 3,
                "warning": 0
            },
            "vclibpy.components.heat_exchangers.heat_transfer.constant": {
                "convention": 2,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 2,
                "statement": 12,
                "warning": 3
            },
            "vclibpy.components.heat_exchangers.heat_transfer.heat_transfer": {
                "convention": 2,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 3,
                "statement": 12,
                "warning": 0
            },
            "vclibpy.components.heat_exchangers.heat_transfer.vdi_atlas_air_to_wall": {
                "convention": 21,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 1,
                "statement": 63,
                "warning": 0
            },
            "vclibpy.components.heat_exchangers.heat_transfer.wall": {
                "convention": 2,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 1,
                "statement": 10,
                "warning": 0
            },
            "vclibpy.components.expansion_valves.expansion_valve": {
                "convention": 1,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 12,
                "warning": 0
            },
            "vclibpy.components.expansion_valves.bernoulli": {
                "convention": 2,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 6,
                "warning": 0
            },
            "vclibpy.components.expansion_valves.__init__": {
                "convention": 1,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 8,
                "statement": 2,
                "warning": 0
            }
        },
        "by_msg": {
            "no-member": 2,
            "too-many-arguments": 13,
            "missing-module-docstring": 27,
            "too-many-locals": 12,
            "invalid-name": 230,
            "unused-variable": 8,
            "line-too-long": 149,
            "superfluous-parens": 1,
            "missing-function-docstring": 8,
            "no-else-continue": 5,
            "too-many-branches": 6,
            "too-many-statements": 4,
            "inconsistent-return-statements": 1,
            "wrong-import-order": 6,
            "unnecessary-comprehension": 4,
            "consider-using-generator": 1,
            "trailing-whitespace": 2,
            "protected-access": 3,
            "fixme": 5,
            "raise-missing-from": 1,
            "consider-using-enumerate": 2,
            "too-many-nested-blocks": 4,
            "import-outside-toplevel": 3,
            "logging-fstring-interpolation": 9,
            "broad-exception-caught": 2,
            "consider-using-with": 1,
            "too-many-instance-attributes": 6,
            "global-statement": 1,
            "global-variable-not-assigned": 1,
            "unused-argument": 5,
            "unnecessary-pass": 6,
            "too-many-lines": 1,
            "consider-using-f-string": 12,
            "no-else-raise": 1,
            "unspecified-encoding": 1,
            "consider-using-max-builtin": 2,
            "nested-min-max": 1,
            "too-many-public-methods": 1,
            "c-extension-no-member": 21,
            "no-else-break": 1,
            "no-else-return": 1,
            "too-few-public-methods": 5,
            "cyclic-import": 8
        },
        "code_type_count": {
            "code": 0,
            "comment": 0,
            "docstring": 0,
            "empty": 0,
            "total": 0
        },
        "dependencies": {
            "vclibpy.datamodels": [
                "vclibpy.components.compressors.ten_coefficient",
                "vclibpy",
                "vclibpy.components.heat_exchangers.heat_exchanger",
                "vclibpy.components.heat_exchangers.moving_boundary_ntu",
                "vclibpy.flowsheets.standard",
                "vclibpy.media.states",
                "vclibpy.components.compressors.compressor",
                "vclibpy.flowsheets.vapor_injection",
                "vclibpy.components.compressors.constant_effectivness",
                "vclibpy.components.heat_exchangers.heat_transfer.heat_transfer",
                "vclibpy.utils.automation",
                "vclibpy.flowsheets.base",
                "vclibpy.components.compressors.rotary"
            ],
            "numpy": [
                "vclibpy.flowsheets.vapor_injection_economizer",
                "vclibpy.utils.plotting",
                "vclibpy.components.heat_exchangers.ntu",
                "vclibpy.components.compressors.ten_coefficient",
                "vclibpy.components.heat_exchangers.moving_boundary_ntu",
                "vclibpy.media.media",
                "vclibpy.flowsheets.vapor_injection",
                "vclibpy.components.heat_exchangers.heat_transfer.vdi_atlas_air_to_wall",
                "vclibpy.components.heat_exchangers.heat_transfer.heat_transfer",
                "vclibpy.utils.automation",
                "vclibpy.flowsheets.base"
            ],
            "vclibpy.flowsheets.vapor_injection": [
                "vclibpy.flowsheets.vapor_injection_phase_separator",
                "vclibpy.flowsheets.vapor_injection_economizer"
            ],
            "vclibpy.components.heat_exchangers.economizer": [
                "vclibpy.flowsheets.vapor_injection_economizer"
            ],
            "vclibpy.components.phase_separator": [
                "vclibpy.flowsheets.vapor_injection_phase_separator"
            ],
            "vclibpy.flowsheets.base": [
                "vclibpy.flowsheets"
            ],
            "vclibpy.flowsheets.standard": [
                "vclibpy.flowsheets"
            ],
            "vclibpy.flowsheets.vapor_injection_economizer": [
                "vclibpy.flowsheets"
            ],
            "vclibpy.flowsheets.vapor_injection_phase_separator": [
                "vclibpy.flowsheets"
            ],
            "matplotlib.pyplot": [
                "vclibpy.utils.plotting",
                "vclibpy.flowsheets.base"
            ],
            "vclibpy.media": [
                "vclibpy.components.phase_separator",
                "vclibpy.utils.ten_coefficient_compressor_reqression",
                "vclibpy.components.component",
                "vclibpy.components.heat_exchangers.economizer",
                "vclibpy.components.heat_exchangers.heat_exchanger",
                "vclibpy.media.ref_prop",
                "vclibpy.components.heat_exchangers.moving_boundary_ntu",
                "vclibpy.components.heat_exchangers.heat_transfer.air_to_wall",
                "vclibpy.media.media",
                "vclibpy.components.heat_exchangers.heat_transfer.wall",
                "vclibpy.components.heat_exchangers.heat_transfer.pipe_to_wall",
                "vclibpy.flowsheets.vapor_injection",
                "vclibpy.components.heat_exchangers.heat_transfer.constant",
                "vclibpy.components.heat_exchangers.heat_transfer.heat_transfer",
                "vclibpy.flowsheets.base"
            ],
            "vclibpy": [
                "vclibpy.utils.ten_coefficient_compressor_reqression",
                "vclibpy.utils.nominal_design",
                "vclibpy.flowsheets.base"
            ],
            "vclibpy.components.heat_exchangers": [
                "vclibpy.flowsheets.base"
            ],
            "vclibpy.components.component": [
                "vclibpy.components.phase_separator",
                "vclibpy.components.heat_exchangers.heat_exchanger",
                "vclibpy.components.compressors.compressor",
                "vclibpy.flowsheets.base",
                "vclibpy.components.expansion_valves.expansion_valve"
            ],
            "vclibpy.flowsheets": [
                "vclibpy.utils.automation",
                "vclibpy.flowsheets.standard",
                "vclibpy.utils.nominal_design",
                "vclibpy.flowsheets.vapor_injection"
            ],
            "vclibpy.components.compressors": [
                "vclibpy.flowsheets.standard",
                "vclibpy.utils.ten_coefficient_compressor_reqression",
                "vclibpy.flowsheets.vapor_injection"
            ],
            "vclibpy.components.expansion_valves": [
                "vclibpy.flowsheets.standard",
                "vclibpy.components.expansion_valves.bernoulli",
                "vclibpy.flowsheets.vapor_injection"
            ],
            "pandas": [
                "vclibpy.utils.ten_coefficient_compressor_reqression",
                "vclibpy.utils.automation",
                "vclibpy.utils.sdf_",
                "vclibpy.components.compressors.ten_coefficient"
            ],
            "sdf": [
                "vclibpy.utils.plotting",
                "vclibpy.utils.sdf_"
            ],
            "vclibpy.utils.automation": [
                "vclibpy.utils"
            ],
            "vclibpy.utils.sdf_": [
                "vclibpy.utils"
            ],
            "vclibpy.utils": [
                "vclibpy.utils.automation"
            ],
            "vclibpy.media.states": [
                "vclibpy.media",
                "vclibpy.media.cool_prop"
            ],
            "vclibpy.media.media": [
                "vclibpy.media",
                "vclibpy.media.cool_prop"
            ],
            "vclibpy.media.cool_prop": [
                "vclibpy.media"
            ],
            "vclibpy.media.ref_prop": [
                "vclibpy.media"
            ],
            "ctREFPROP.ctREFPROP": [
                "vclibpy.media.ref_prop"
            ],
            "CoolProp.CoolProp": [
                "vclibpy.media.cool_prop"
            ],
            "vclibpy.components.compressors.compressor": [
                "vclibpy.components.compressors.constant_effectivness",
                "vclibpy.components.compressors",
                "vclibpy.components.compressors.ten_coefficient",
                "vclibpy.components.compressors.rotary"
            ],
            "vclibpy.components.compressors.rotary": [
                "vclibpy.components.compressors"
            ],
            "vclibpy.components.compressors.ten_coefficient": [
                "vclibpy.components.compressors"
            ],
            "vclibpy.components.compressors.constant_effectivness": [
                "vclibpy.components.compressors"
            ],
            "vclibpy.components.heat_exchangers.heat_exchanger": [
                "vclibpy.components.heat_exchangers.ntu",
                "vclibpy.components.heat_exchangers"
            ],
            "vclibpy.components.heat_exchangers.moving_boundary_ntu": [
                "vclibpy.components.heat_exchangers"
            ],
            "vclibpy.components.heat_exchangers.ntu": [
                "vclibpy.components.heat_exchangers.economizer",
                "vclibpy.components.heat_exchangers.moving_boundary_ntu"
            ],
            "vclibpy.components.heat_exchangers.heat_transfer.heat_transfer": [
                "vclibpy.components.heat_exchangers.heat_transfer.air_to_wall",
                "vclibpy.components.heat_exchangers.heat_exchanger",
                "vclibpy.components.heat_exchangers.heat_transfer.wall",
                "vclibpy.components.heat_exchangers.heat_transfer.pipe_to_wall",
                "vclibpy.components.heat_exchangers.heat_transfer"
            ],
            "vclibpy.components.heat_exchangers.heat_transfer.constant": [
                "vclibpy.components.heat_exchangers.heat_transfer"
            ],
            "vclibpy.components.heat_exchangers.heat_transfer.wall": [
                "vclibpy.components.heat_exchangers.heat_transfer"
            ],
            "vclibpy.components.heat_exchangers.heat_transfer.air_to_wall": [
                "vclibpy.components.heat_exchangers.heat_transfer.vdi_atlas_air_to_wall"
            ],
            "vclibpy.components.expansion_valves.expansion_valve": [
                "vclibpy.components.expansion_valves"
            ],
            "vclibpy.components.expansion_valves.bernoulli": [
                "vclibpy.components.expansion_valves"
            ]
        },
        "duplicated_lines": {
            "nb_duplicated_lines": 0,
            "percent_duplicated_lines": 0.0
        },
        "node_count": {
            "function": 19,
            "klass": 40,
            "method": 219,
            "module": 42
        },
        "undocumented": {
            "function": 0,
            "klass": 0,
            "method": 8,
            "module": 27
        },
        "convention": 441,
        "error": 2,
        "fatal": 0,
        "info": 21,
        "refactor": 76,
        "statement": 2197,
        "warning": 43,
        "global_note": 0,
        "nb_duplicated_lines": 0,
        "percent_duplicated_lines": 0.0
    },
    "previous": {
        "bad_names": {
            "argument": 33,
            "attr": 18,
            "klass": 0,
            "class_attribute": 0,
            "class_const": 0,
            "const": 0,
            "inlinevar": 0,
            "function": 0,
            "method": 7,
            "module": 0,
            "variable": 172,
            "typevar": 0,
            "typealias": 0
        },
        "by_module": {
            "vclibpy": {
                "convention": 0,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 2,
                "warning": 0
            },
            "vclibpy.datamodels": {
                "convention": 0,
                "error": 1,
                "fatal": 0,
                "info": 0,
                "refactor": 1,
                "statement": 51,
                "warning": 0
            },
            "vclibpy.flowsheets.vapor_injection_economizer": {
                "convention": 4,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 1,
                "statement": 49,
                "warning": 1
            },
            "vclibpy.flowsheets.vapor_injection_phase_separator": {
                "convention": 1,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 18,
                "warning": 0
            },
            "vclibpy.flowsheets.__init__": {
                "convention": 1,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 4,
                "warning": 0
            },
            "vclibpy.flowsheets.base": {
                "convention": 31,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 8,
                "statement": 228,
                "warning": 0
            },
            "vclibpy.flowsheets.vapor_injection": {
                "convention": 4,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 64,
                "warning": 0
            },
            "vclibpy.flowsheets.standard": {
                "convention": 2,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 36,
                "warning": 0
            },
            "vclibpy.utils.sdf_": {
                "convention": 5,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 4,
                "statement": 75,
                "warning": 0
            },
            "vclibpy.utils.nominal_design": {
                "convention": 8,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 1,
                "statement": 35,
                "warning": 2
            },
            "vclibpy.utils.ten_coefficient_compressor_reqression": {
                "convention": 20,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 3,
                "statement": 65,
                "warning": 3
            },
            "vclibpy.utils.__init__": {
                "convention": 1,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 2,
                "warning": 0
            },
            "vclibpy.utils.plotting": {
                "convention": 26,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 8,
                "statement": 141,
                "warning": 0
            },
            "vclibpy.utils.automation": {
                "convention": 16,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 6,
                "statement": 99,
                "warning": 7
            },
            "vclibpy.media.states": {
                "convention": 9,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 4,
                "statement": 60,
                "warning": 0
            },
            "vclibpy.media.__init__": {
                "convention": 1,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 12,
                "warning": 2
            },
            "vclibpy.media.media": {
                "convention": 17,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 50,
                "warning": 6
            },
            "vclibpy.media.ref_prop": {
                "convention": 70,
                "error": 1,
                "fatal": 0,
                "info": 0,
                "refactor": 13,
                "statement": 427,
                "warning": 7
            },
            "vclibpy.media.cool_prop": {
                "convention": 3,
                "error": 0,
                "fatal": 0,
                "info": 21,
                "refactor": 0,
                "statement": 59,
                "warning": 0
            },
            "vclibpy.components.__init__": {
                "convention": 0,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 0,
                "warning": 0
            },
            "vclibpy.components.phase_separator": {
                "convention": 0,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 21,
                "warning": 0
            },
            "vclibpy.components.component": {
                "convention": 4,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 28,
                "warning": 2
            },
            "vclibpy.components.compressors.ten_coefficient": {
                "convention": 42,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 2,
                "statement": 95,
                "warning": 0
            },
            "vclibpy.components.compressors.compressor": {
                "convention": 9,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 38,
                "warning": 0
            },
            "vclibpy.components.compressors.rotary": {
                "convention": 12,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 2,
                "statement": 49,
                "warning": 0
            },
            "vclibpy.components.compressors.__init__": {
                "convention": 1,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 4,
                "warning": 0
            },
            "vclibpy.components.compressors.constant_effectivness": {
                "convention": 3,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 1,
                "statement": 14,
                "warning": 0
            },
            "vclibpy.components.heat_exchangers.__init__": {
                "convention": 1,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 2,
                "warning": 0
            },
            "vclibpy.components.heat_exchangers.moving_boundary_ntu": {
                "convention": 73,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 3,
                "statement": 134,
                "warning": 10
            },
            "vclibpy.components.heat_exchangers.economizer": {
                "convention": 3,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 31,
                "warning": 0
            },
            "vclibpy.components.heat_exchangers.heat_exchanger": {
                "convention": 11,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 2,
                "statement": 68,
                "warning": 0
            },
            "vclibpy.components.heat_exchangers.ntu": {
                "convention": 15,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 49,
                "warning": 0
            },
            "vclibpy.components.heat_exchangers.heat_transfer.air_to_wall": {
                "convention": 7,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 31,
                "warning": 0
            },
            "vclibpy.components.heat_exchangers.heat_transfer.pipe_to_wall": {
                "convention": 7,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 2,
                "statement": 36,
                "warning": 0
            },
            "vclibpy.components.heat_exchangers.heat_transfer.__init__": {
                "convention": 3,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 3,
                "warning": 0
            },
            "vclibpy.components.heat_exchangers.heat_transfer.constant": {
                "convention": 2,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 2,
                "statement": 12,
                "warning": 3
            },
            "vclibpy.components.heat_exchangers.heat_transfer.heat_transfer": {
                "convention": 2,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 3,
                "statement": 12,
                "warning": 0
            },
            "vclibpy.components.heat_exchangers.heat_transfer.vdi_atlas_air_to_wall": {
                "convention": 21,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 1,
                "statement": 63,
                "warning": 0
            },
            "vclibpy.components.heat_exchangers.heat_transfer.wall": {
                "convention": 2,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 1,
                "statement": 10,
                "warning": 0
            },
            "vclibpy.components.expansion_valves.expansion_valve": {
                "convention": 1,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 12,
                "warning": 0
            },
            "vclibpy.components.expansion_valves.bernoulli": {
                "convention": 2,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 6,
                "warning": 0
            },
            "vclibpy.components.expansion_valves.__init__": {
                "convention": 1,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 8,
                "statement": 2,
                "warning": 0
            }
        },
        "by_msg": {
            "no-member": 2,
            "too-many-arguments": 13,
            "missing-module-docstring": 27,
            "too-many-locals": 12,
            "invalid-name": 230,
            "unused-variable": 8,
            "line-too-long": 149,
            "superfluous-parens": 1,
            "missing-function-docstring": 8,
            "no-else-continue": 5,
            "too-many-branches": 6,
            "too-many-statements": 4,
            "inconsistent-return-statements": 1,
            "wrong-import-order": 6,
            "unnecessary-comprehension": 4,
            "consider-using-generator": 1,
            "trailing-whitespace": 2,
            "protected-access": 3,
            "fixme": 5,
            "raise-missing-from": 1,
            "consider-using-enumerate": 2,
            "too-many-nested-blocks": 4,
            "import-outside-toplevel": 3,
            "logging-fstring-interpolation": 9,
            "broad-exception-caught": 2,
            "consider-using-with": 1,
            "too-many-instance-attributes": 6,
            "global-statement": 1,
            "global-variable-not-assigned": 1,
            "unused-argument": 5,
            "unnecessary-pass": 6,
            "too-many-lines": 1,
            "consider-using-f-string": 12,
            "no-else-raise": 1,
            "unspecified-encoding": 1,
            "consider-using-max-builtin": 2,
            "nested-min-max": 1,
            "too-many-public-methods": 1,
            "c-extension-no-member": 21,
            "no-else-break": 1,
            "no-else-return": 1,
            "too-few-public-methods": 5,
            "cyclic-import": 8
        },
        "code_type_count": {
            "code": 0,
            "comment": 0,
            "docstring": 0,
            "empty": 0,
            "total": 0
        },
        "dependencies": {
            "vclibpy.datamodels": [
                "vclibpy.components.compressors.ten_coefficient",
                "vclibpy",
                "vclibpy.components.heat_exchangers.heat_exchanger",
                "vclibpy.components.heat_exchangers.moving_boundary_ntu",
                "vclibpy.flowsheets.standard",
                "vclibpy.media.states",
                "vclibpy.components.compressors.compressor",
                "vclibpy.flowsheets.vapor_injection",
                "vclibpy.components.compressors.constant_effectivness",
                "vclibpy.components.heat_exchangers.heat_transfer.heat_transfer",
                "vclibpy.utils.automation",
                "vclibpy.flowsheets.base",
                "vclibpy.components.compressors.rotary"
            ],
            "numpy": [
                "vclibpy.flowsheets.vapor_injection_economizer",
                "vclibpy.utils.plotting",
                "vclibpy.components.heat_exchangers.ntu",
                "vclibpy.components.compressors.ten_coefficient",
                "vclibpy.components.heat_exchangers.moving_boundary_ntu",
                "vclibpy.media.media",
                "vclibpy.flowsheets.vapor_injection",
                "vclibpy.components.heat_exchangers.heat_transfer.vdi_atlas_air_to_wall",
                "vclibpy.components.heat_exchangers.heat_transfer.heat_transfer",
                "vclibpy.utils.automation",
                "vclibpy.flowsheets.base"
            ],
            "vclibpy.flowsheets.vapor_injection": [
                "vclibpy.flowsheets.vapor_injection_phase_separator",
                "vclibpy.flowsheets.vapor_injection_economizer"
            ],
            "vclibpy.components.heat_exchangers.economizer": [
                "vclibpy.flowsheets.vapor_injection_economizer"
            ],
            "vclibpy.components.phase_separator": [
                "vclibpy.flowsheets.vapor_injection_phase_separator"
            ],
            "vclibpy.flowsheets.base": [
                "vclibpy.flowsheets"
            ],
            "vclibpy.flowsheets.standard": [
                "vclibpy.flowsheets"
            ],
            "vclibpy.flowsheets.vapor_injection_economizer": [
                "vclibpy.flowsheets"
            ],
            "vclibpy.flowsheets.vapor_injection_phase_separator": [
                "vclibpy.flowsheets"
            ],
            "matplotlib.pyplot": [
                "vclibpy.utils.plotting",
                "vclibpy.flowsheets.base"
            ],
            "vclibpy.media": [
                "vclibpy.components.phase_separator",
                "vclibpy.utils.ten_coefficient_compressor_reqression",
                "vclibpy.components.heat_exchangers.heat_transfer.air_to_wall",
                "vclibpy.components.component",
                "vclibpy.components.heat_exchangers.heat_exchanger",
                "vclibpy.media.ref_prop",
                "vclibpy.components.heat_exchangers.moving_boundary_ntu",
                "vclibpy.components.heat_exchangers.economizer",
                "vclibpy.components.heat_exchangers.heat_transfer.wall",
                "vclibpy.media.media",
                "vclibpy.components.heat_exchangers.heat_transfer.pipe_to_wall",
                "vclibpy.flowsheets.vapor_injection",
                "vclibpy.components.heat_exchangers.heat_transfer.constant",
                "vclibpy.components.heat_exchangers.heat_transfer.heat_transfer",
                "vclibpy.flowsheets.base"
            ],
            "vclibpy": [
                "vclibpy.utils.ten_coefficient_compressor_reqression",
                "vclibpy.utils.nominal_design",
                "vclibpy.flowsheets.base"
            ],
            "vclibpy.components.heat_exchangers": [
                "vclibpy.flowsheets.base"
            ],
            "vclibpy.components.component": [
                "vclibpy.components.phase_separator",
                "vclibpy.components.heat_exchangers.heat_exchanger",
                "vclibpy.components.compressors.compressor",
                "vclibpy.flowsheets.base",
                "vclibpy.components.expansion_valves.expansion_valve"
            ],
            "vclibpy.flowsheets": [
                "vclibpy.flowsheets.standard",
                "vclibpy.utils.automation",
                "vclibpy.utils.nominal_design",
                "vclibpy.flowsheets.vapor_injection"
            ],
            "vclibpy.components.compressors": [
                "vclibpy.utils.ten_coefficient_compressor_reqression",
                "vclibpy.flowsheets.standard",
                "vclibpy.flowsheets.vapor_injection"
            ],
            "vclibpy.components.expansion_valves": [
                "vclibpy.flowsheets.standard",
                "vclibpy.components.expansion_valves.bernoulli",
                "vclibpy.flowsheets.vapor_injection"
            ],
            "pandas": [
                "vclibpy.utils.ten_coefficient_compressor_reqression",
                "vclibpy.utils.automation",
                "vclibpy.utils.sdf_",
                "vclibpy.components.compressors.ten_coefficient"
            ],
            "sdf": [
                "vclibpy.utils.plotting",
                "vclibpy.utils.sdf_"
            ],
            "vclibpy.utils.automation": [
                "vclibpy.utils"
            ],
            "vclibpy.utils.sdf_": [
                "vclibpy.utils"
            ],
            "vclibpy.utils": [
                "vclibpy.utils.automation"
            ],
            "vclibpy.media.states": [
                "vclibpy.media",
                "vclibpy.media.cool_prop"
            ],
            "vclibpy.media.media": [
                "vclibpy.media",
                "vclibpy.media.cool_prop"
            ],
            "vclibpy.media.cool_prop": [
                "vclibpy.media"
            ],
            "vclibpy.media.ref_prop": [
                "vclibpy.media"
            ],
            "ctREFPROP.ctREFPROP": [
                "vclibpy.media.ref_prop"
            ],
            "CoolProp.CoolProp": [
                "vclibpy.media.cool_prop"
            ],
            "vclibpy.components.compressors.compressor": [
                "vclibpy.components.compressors.constant_effectivness",
                "vclibpy.components.compressors.rotary",
                "vclibpy.components.compressors.ten_coefficient",
                "vclibpy.components.compressors"
            ],
            "vclibpy.components.compressors.rotary": [
                "vclibpy.components.compressors"
            ],
            "vclibpy.components.compressors.ten_coefficient": [
                "vclibpy.components.compressors"
            ],
            "vclibpy.components.compressors.constant_effectivness": [
                "vclibpy.components.compressors"
            ],
            "vclibpy.components.heat_exchangers.heat_exchanger": [
                "vclibpy.components.heat_exchangers.ntu",
                "vclibpy.components.heat_exchangers"
            ],
            "vclibpy.components.heat_exchangers.moving_boundary_ntu": [
                "vclibpy.components.heat_exchangers"
            ],
            "vclibpy.components.heat_exchangers.ntu": [
                "vclibpy.components.heat_exchangers.economizer",
                "vclibpy.components.heat_exchangers.moving_boundary_ntu"
            ],
            "vclibpy.components.heat_exchangers.heat_transfer.heat_transfer": [
                "vclibpy.components.heat_exchangers.heat_transfer.air_to_wall",
                "vclibpy.components.heat_exchangers.heat_exchanger",
                "vclibpy.components.heat_exchangers.heat_transfer.wall",
                "vclibpy.components.heat_exchangers.heat_transfer.pipe_to_wall",
                "vclibpy.components.heat_exchangers.heat_transfer"
            ],
            "vclibpy.components.heat_exchangers.heat_transfer.constant": [
                "vclibpy.components.heat_exchangers.heat_transfer"
            ],
            "vclibpy.components.heat_exchangers.heat_transfer.wall": [
                "vclibpy.components.heat_exchangers.heat_transfer"
            ],
            "vclibpy.components.heat_exchangers.heat_transfer.air_to_wall": [
                "vclibpy.components.heat_exchangers.heat_transfer.vdi_atlas_air_to_wall"
            ],
            "vclibpy.components.expansion_valves.expansion_valve": [
                "vclibpy.components.expansion_valves"
            ],
            "vclibpy.components.expansion_valves.bernoulli": [
                "vclibpy.components.expansion_valves"
            ]
        },
        "duplicated_lines": {
            "nb_duplicated_lines": 0,
            "percent_duplicated_lines": 0.0
        },
        "node_count": {
            "function": 19,
            "klass": 40,
            "method": 219,
            "module": 42
        },
        "undocumented": {
            "function": 0,
            "klass": 0,
            "method": 8,
            "module": 27
        },
        "convention": 441,
        "error": 2,
        "fatal": 0,
        "info": 21,
        "refactor": 76,
        "statement": 2197,
        "warning": 43,
        "global_note": 7.405553026854802,
        "nb_duplicated_lines": 0,
        "percent_duplicated_lines": 0.0
    }
}
